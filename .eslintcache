[{"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\index.js":"1","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\navbar\\navbar.js":"2","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\navbar\\navMob\\navMob.js":"3","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\navbar\\dropdownDesktop\\dropdownMenu.js":"4","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\navbar\\useOutsideOfClick.js":"5","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\navbar\\navItems\\navItems.js":"6","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\component.js":"7","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\footer\\footer.js":"8","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\inputScore\\inputScore.js":"9","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\api\\sendSubjects.js":"10","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\branchesAndPRofs\\brachesAndProfs.js":"11","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\showResult\\showResult.js":"12","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\chosenSubjes\\chosenSubj.js":"13","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\subjectsList\\subjects.js":"14","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\branchesAndPRofs\\profDB.js":"15","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\branchesAndPRofs\\connect.js":"16","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\subjectsList\\subjectsList.js":"17","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\about\\about.js":"18","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\main.js":"19","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\calc.js":"20","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\blog\\blog.js":"21","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\blog\\blogApi.js":"22","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\cardPost\\cardPost.js":"23","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\study\\study.js":"24","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\test\\test.js":"25","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\profs\\profs.js":"26","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\univers\\univers.js":"27","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\error\\error.js":"28","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\bodyTranslate.js":"29"},{"size":390,"mtime":1613704458513,"results":"30","hashOfConfig":"31"},{"size":1093,"mtime":1614009765756,"results":"32","hashOfConfig":"31"},{"size":2573,"mtime":1614009690510,"results":"33","hashOfConfig":"31"},{"size":50550,"mtime":1614624640513,"results":"34","hashOfConfig":"31"},{"size":453,"mtime":1610437246912,"results":"35","hashOfConfig":"31"},{"size":3723,"mtime":1614141996395,"results":"36","hashOfConfig":"31"},{"size":6888,"mtime":1614664601100,"results":"37","hashOfConfig":"31"},{"size":2404,"mtime":1614033420515,"results":"38","hashOfConfig":"31"},{"size":1219,"mtime":1614004529832,"results":"39","hashOfConfig":"31"},{"size":1008,"mtime":1614076621622,"results":"40","hashOfConfig":"31"},{"size":16117,"mtime":1614276238295,"results":"41","hashOfConfig":"31"},{"size":9041,"mtime":1614272033742,"results":"42","hashOfConfig":"31"},{"size":2520,"mtime":1614004692626,"results":"43","hashOfConfig":"31"},{"size":5114,"mtime":1614004352508,"results":"44","hashOfConfig":"31"},{"size":5409,"mtime":1614269017726,"results":"45","hashOfConfig":"31"},{"size":1558,"mtime":1614276219172,"results":"46","hashOfConfig":"31"},{"size":3476,"mtime":1614004373461,"results":"47","hashOfConfig":"31"},{"size":2908,"mtime":1614621080889,"results":"48","hashOfConfig":"31"},{"size":2453,"mtime":1614666851503,"results":"49","hashOfConfig":"31"},{"size":9218,"mtime":1614079251260,"results":"50","hashOfConfig":"31"},{"size":3524,"mtime":1614666879596,"results":"51","hashOfConfig":"31"},{"size":451,"mtime":1614028105202,"results":"52","hashOfConfig":"31"},{"size":1401,"mtime":1614664423280,"results":"53","hashOfConfig":"31"},{"size":260,"mtime":1614027079045,"results":"54","hashOfConfig":"31"},{"size":249,"mtime":1614027031463,"results":"55","hashOfConfig":"31"},{"size":232,"mtime":1614027141224,"results":"56","hashOfConfig":"31"},{"size":301,"mtime":1614027060865,"results":"57","hashOfConfig":"31"},{"size":235,"mtime":1614027902504,"results":"58","hashOfConfig":"31"},{"size":496,"mtime":1614667166336,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"lzk3ie",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\index.js",["134"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LocalizedStrings from 'react-localization';\nimport Component from './components/component.js'\nimport './index.css';\nimport './components/navbar/navbar.css';\nimport { BrowserRouter } from 'react-router-dom'\n\n\n\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Component />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n",["135","136"],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\navbar\\navbar.js",["137"],"import React, { useEffect, useState } from 'react';\r\nimport NavMob from './navMob/navMob.js';\r\nimport DropdownMenu from './dropdownDesktop/dropdownMenu.js'\r\nimport { useHistory } from 'react-router-dom';\r\nimport './navbar.css';\r\n\r\nfunction Navbar(props) {\r\n\r\n    const history = useHistory()\r\n\r\n    const [isAbout,setAbout] = useState(false);\r\n    useEffect(() => {\r\n        return history.listen((location) => {\r\n            if(location.pathname === '/about'){\r\n                setAbout(true)\r\n                return;\r\n            };\r\n            setAbout(false)\r\n        })\r\n    }, [history])\r\n    useEffect(()=>{\r\n        if(window.location.pathname === '/about') setAbout(true);\r\n    },[]);\r\n\r\n\r\n \r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light navbar-header\">\r\n            {isAbout === true ?  null: <NavMob setOutsideActive={props.setOutsideActive} strings={props.strings}/>}\r\n            <a className=\"navbar-brand\" href=\"#\">OQY</a>\r\n            <DropdownMenu setLanguage={props.setLanguage} />\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\navbar\\navMob\\navMob.js",["138"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport NavItems from '../navItems/navItems.js';\r\nimport cn from 'classnames';\r\nimport UseOutsideClick from '../useOutsideOfClick.js';\r\nimport './navMob.css'\r\n\r\n\r\nfunction NavMob(props) {\r\n    const ref = useRef();\r\n    const [isHide, setHide] = useState(true);\r\n    const [toggle, setToggle] = useState(false);\r\n    const [temp, setTemp] = useState(true);\r\n    const [isActive, setActive] = useState(false);\r\n    const name = cn('navMob', {\r\n        'animation-show': !isHide ? true : false,\r\n        'hideNav': toggle ? false : true,\r\n        'hidden-responsive': temp ? true : false,\r\n    });\r\n    const nameForButton = cn('navbar-toggler', {\r\n        'hidden-responsive': isHide ? false : true\r\n    })\r\n    const windowInnerWidth = window.innerWidth\r\n\r\n    UseOutsideClick(ref, () => {\r\n\r\n        if (windowInnerWidth <= 1300 && windowInnerWidth >=750 && isActive) {\r\n            setHide(true);\r\n            props.setOutsideActive(!toggle)\r\n            setToggle(!toggle);\r\n            setTimeout(() => {\r\n                setTemp(true);\r\n                setActive(false);\r\n            }, 500);\r\n        }\r\n    });\r\n    const changeHide = () => {\r\n\r\n        if (isHide === false && isActive === true && temp === false) {\r\n            if (windowInnerWidth <= 1300){\r\n                props.setOutsideActive(!toggle)\r\n            }\r\n            setHide(true);\r\n            setToggle(!toggle);\r\n            setTimeout(() => {\r\n                setTemp(true);\r\n                setActive(false);\r\n            }, 500);\r\n        } else {\r\n            if (windowInnerWidth <= 1300){\r\n                props.setOutsideActive(!toggle)\r\n            }\r\n            setActive(!isActive);\r\n            setHide(!isHide);\r\n            setToggle(!toggle);\r\n            setTemp(!temp);\r\n        }\r\n\r\n    }\r\n  \r\n\r\n    const { isAbout } = props;\r\n\r\n    const navVert = !isAbout ? <div className={name} >\r\n        <NavItems strings={props.strings} setOutsideActive={props.setOutsideActive}/>\r\n    </div> : null;\r\n\r\n\r\n    return <div ref={ref} className=\"navMob-Parent\">\r\n        {!isAbout ? <div>\r\n            <button ref={ref} onClick={changeHide} className={nameForButton} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n        </div> : null}\r\n        {isActive ? navVert : null}\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default NavMob;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\navbar\\dropdownDesktop\\dropdownMenu.js",["139","140"],"import React, { useState,useRef} from 'react';\r\nimport useOutsideOfClick from '../useOutsideOfClick.js';\r\nimport cn from 'classnames';\r\nimport './dropdownMenu.css';\r\n\r\n\r\nfunction DropdownMenu(props) {\r\n\r\n\r\n    const flags = {\r\n        kz: <svg name=\"kz\" width=\"67\" height=\"27\" viewBox=\"0 0 87 63\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M87 53.1667C87 58.5051 82.6718 62.8333 77.3333 62.8333H9.66667C4.32825 62.8333 0 58.5051 0 53.1667V9.66667C0 4.32825 4.32825 0 9.66667 0H77.3333C82.6718 0 87 4.32825 87 9.66667V53.1667Z\" fill=\"#00AFCA\" />\r\n            <path d=\"M46.0013 34.7469C49.8252 34.7469 52.9251 31.647 52.9251 27.8231C52.9251 23.9992 49.8252 20.8994 46.0013 20.8994C42.1774 20.8994 39.0776 23.9992 39.0776 27.8231C39.0776 31.647 42.1774 34.7469 46.0013 34.7469Z\" fill=\"#FFCC4D\" />\r\n            <path d=\"M46.0061 20.3773C46.417 20.3725 46.5668 20.1139 46.5668 19.807C46.5668 19.3962 46.0061 16.1917 46.0061 16.1917C46.0061 16.1917 45.4358 19.3962 45.4358 19.807C45.4358 20.1139 45.5905 20.3773 46.0061 20.3773ZM46.0061 35.3075C45.5905 35.3099 45.4358 35.5685 45.4358 35.8754C45.4358 36.2887 46.0061 39.4497 46.0061 39.4497C46.0061 39.4497 46.5668 36.2863 46.5668 35.8754C46.5692 35.5709 46.417 35.3075 46.0061 35.3075ZM44.0704 35.0151C43.6716 34.9136 43.4614 35.1238 43.3816 35.4211C43.2753 35.8174 42.9877 39.0606 42.9877 39.0606C42.9877 39.0606 44.3676 36.1098 44.474 35.7135C44.5561 35.4163 44.4716 35.1214 44.0704 35.0151V35.0151ZM47.9371 20.5924C48.3382 20.6988 48.5557 20.4861 48.6355 20.1913C48.7418 19.7925 49.0076 16.5904 49.0076 16.5904C49.0076 16.5904 47.6495 19.4977 47.5407 19.8988C47.461 20.1937 47.5383 20.4861 47.9371 20.5924V20.5924ZM42.2748 34.2659C41.9147 34.0654 41.6561 34.2128 41.5039 34.481C41.2985 34.8363 40.182 37.8933 40.182 37.8933C40.182 37.8933 42.2772 35.4018 42.4826 35.0465C42.6373 34.7783 42.6349 34.4738 42.2748 34.2659V34.2659ZM49.7399 21.3343C50.1 21.5422 50.3658 21.3923 50.5181 21.1265C50.7259 20.7688 51.811 17.748 51.811 17.748C51.811 17.748 49.7423 20.2058 49.5345 20.561C49.3846 20.8268 49.3846 21.1289 49.7399 21.3343ZM40.733 33.0842C40.4381 32.7966 40.1506 32.8715 39.9331 33.089C39.6431 33.3814 37.7726 36.0446 37.7726 36.0446C37.7726 36.0446 40.443 34.1789 40.733 33.8913C40.9505 33.6738 41.0278 33.3742 40.733 33.0842V33.0842ZM51.2914 22.5233C51.5862 22.8158 51.8786 22.7408 52.0961 22.5233C52.3886 22.2333 54.2204 19.5919 54.2204 19.5919C54.2204 19.5919 51.5886 21.4334 51.2986 21.7258C51.0811 21.9433 51.0014 22.2333 51.2914 22.5233V22.5233ZM39.5536 31.5399C39.3434 31.1871 39.0461 31.1871 38.7779 31.3393C38.4202 31.5448 35.9262 33.6328 35.9262 33.6328C35.9262 33.6328 38.9882 32.5259 39.3434 32.3205C39.6117 32.1658 39.7615 31.9 39.5536 31.5399V31.5399ZM52.4828 24.0748C52.6931 24.4349 52.9976 24.4373 53.261 24.2851C53.6186 24.0773 56.0716 22.0038 56.0716 22.0038C56.0716 22.0038 53.0531 23.0985 52.6955 23.3039C52.4296 23.4586 52.2798 23.7172 52.4828 24.0748ZM38.8117 29.7443C38.7006 29.348 38.4106 29.2707 38.1133 29.348C37.717 29.4543 34.7662 30.827 34.7662 30.827C34.7662 30.827 38.0094 30.5491 38.4057 30.4428C38.703 30.3606 38.9181 30.1455 38.8117 29.7443V29.7443ZM53.2296 25.8777C53.3407 26.2788 53.6307 26.361 53.928 26.2813C54.3267 26.1749 57.234 24.8071 57.234 24.8071C57.234 24.8071 54.0343 25.0826 53.6331 25.1889C53.3383 25.2663 53.1232 25.4813 53.2296 25.8777ZM38.558 27.8183C38.5531 27.4074 38.2946 27.2576 37.9876 27.2576C37.5768 27.2576 34.3723 27.8183 34.3723 27.8183C34.3723 27.8183 37.5768 28.3886 37.9876 28.3886C38.2946 28.3886 38.558 28.2339 38.558 27.8183ZM53.4881 27.8183C53.4906 28.2339 53.7491 28.3886 54.0561 28.3886C54.4693 28.3886 57.6303 27.8183 57.6303 27.8183C57.6303 27.8183 54.4669 27.2576 54.0561 27.2576C53.7491 27.2552 53.4881 27.4074 53.4881 27.8183ZM38.8117 25.8922C38.9132 25.4934 38.703 25.2832 38.4057 25.2034C38.0094 25.0971 34.7662 24.8095 34.7662 24.8095C34.7662 24.8095 37.717 26.1894 38.1133 26.2958C38.4106 26.3755 38.7054 26.2933 38.8117 25.8922ZM53.232 29.7564C53.1256 30.1576 53.3383 30.3751 53.6331 30.4548C54.0319 30.5612 57.234 30.827 57.234 30.827C57.234 30.827 54.3267 29.4664 53.9256 29.3601C53.6307 29.2828 53.3383 29.3577 53.232 29.7564V29.7564ZM39.5561 24.0966C39.7566 23.7389 39.6092 23.4779 39.341 23.3257C38.9857 23.1203 35.9286 22.0038 35.9286 22.0038C35.9286 22.0038 38.4202 24.099 38.7755 24.3044C39.0437 24.4591 39.3482 24.4543 39.5561 24.0966V24.0966ZM52.4876 31.5617C52.2798 31.9218 52.4296 32.1876 52.6955 32.3398C53.0507 32.5477 56.074 33.6328 56.074 33.6328C56.074 33.6328 53.6162 31.5665 53.261 31.3587C52.9951 31.2064 52.6931 31.2064 52.4876 31.5617V31.5617ZM40.7378 22.5548C41.0254 22.2599 40.9505 21.9723 40.733 21.7548C40.4406 21.4648 37.7774 19.5943 37.7774 19.5943C37.7774 19.5943 39.6431 22.2648 39.9307 22.5548C40.1482 22.7723 40.4454 22.8496 40.7378 22.5548ZM51.2986 33.1132C51.0062 33.408 51.0811 33.7028 51.2986 33.9179C51.5886 34.2103 54.2301 36.0422 54.2301 36.0422C54.2301 36.0422 52.3886 33.4104 52.0961 33.118C51.8786 32.9005 51.5886 32.8208 51.2986 33.1132V33.1132ZM42.2845 21.373C42.6349 21.1628 42.6373 20.8655 42.4851 20.5973C42.2796 20.242 40.1916 17.7456 40.1916 17.7456C40.1916 17.7456 41.2985 20.8075 41.5039 21.1628C41.6561 21.431 41.9244 21.5808 42.2845 21.373V21.373ZM49.7496 34.3046C49.3919 34.5124 49.3871 34.8145 49.5393 35.0804C49.7471 35.438 51.8206 37.8909 51.8206 37.8909C51.8206 37.8909 50.7259 34.8701 50.5205 34.5124C50.3658 34.249 50.1048 34.0968 49.7496 34.3046V34.3046ZM44.0776 20.6311C44.474 20.5199 44.5513 20.2299 44.474 19.9327C44.3676 19.5363 42.995 16.5856 42.995 16.5856C42.995 16.5856 43.2729 19.8288 43.3792 20.2251C43.459 20.5223 43.6765 20.7374 44.0776 20.6311V20.6311ZM47.9443 35.0513C47.5431 35.1625 47.461 35.4525 47.5407 35.7498C47.6471 36.1485 49.0149 39.0558 49.0149 39.0558C49.0149 39.0558 48.7394 35.8537 48.6331 35.4574C48.5557 35.1601 48.3406 34.945 47.9443 35.0513V35.0513Z\" fill=\"#FFCC4D\" />\r\n            <path d=\"M52.7945 45.0587L52.7051 45.0974L52.606 45.1119L52.5311 45.1264L52.3934 45.0974L52.333 45.0732L52.2774 45.0466L52.2121 45.0056L52.1034 44.9282L52.0043 44.8485L51.9487 44.8098L51.8786 44.7808L51.8303 44.7687H51.7602L51.4871 45.3367L51.4315 45.4164L51.3784 45.4816L51.3228 45.5227L51.2744 45.5638L51.2044 45.5904H51.1391L51.0787 45.5638L50.9941 45.5227L50.9699 45.4816L50.941 45.4406L50.9119 45.3874L50.883 45.3246L50.8443 45.124L50.7645 45.1892L50.6896 45.2835L50.5398 45.5107L50.4504 45.6291L50.3561 45.7209L50.3054 45.7765L50.2401 45.8176L50.1749 45.8466L50.0951 45.8707H50.0564L49.9864 45.8852L49.9211 45.8707L49.8704 45.8466L49.7157 45.6605L49.5417 45.4744L49.4233 45.6605L49.2855 45.8176L49.2203 45.8828L49.1599 45.9481L49.0946 46.0012L48.9714 46.0689L48.9061 46.0834H48.8409L48.7853 46.0689L48.7321 46.0399L48.6935 45.9988L48.6427 45.936C48.6089 45.8369 48.5726 45.7402 48.534 45.6436L48.5194 45.5759L48.4953 45.5251L48.4663 45.4986H48.4373L48.0796 46.0834L48.0289 46.1342L47.9346 46.1752L47.7268 46.226H47.6035L47.5093 46.1994L47.4803 46.1849L47.4416 46.1438L47.432 46.1196V46.0665L47.4803 45.4816L47.4416 45.4962L47.3377 45.5469C47.2434 45.646 47.1492 45.7475 47.0598 45.8514L46.9414 45.9988L46.794 46.1221L46.6562 46.226L46.5789 46.2695L46.4194 46.2936L46.3541 46.2791L46.3251 46.2695L46.2985 46.2405L46.284 46.1994V46.1583L46.2985 45.9892L46.3396 45.7209L46.313 45.5638L46.2575 45.472L46.1777 45.5904L46.0472 45.762C45.9385 45.8804 45.8273 45.9964 45.7137 46.11C45.6509 46.1511 45.588 46.197 45.5276 46.2429L45.3826 46.2936L45.3536 46.2791H45.3125L45.2835 46.255L45.2739 46.2405L45.2449 46.1994L45.2352 46.1583V46.1076L45.2207 46.0399L45.2352 45.5372C44.9935 45.7016 44.7495 45.8611 44.503 46.0133L44.4111 46.0544L44.3072 46.1076C44.2081 46.1317 44.1114 46.1559 44.0148 46.1849H43.9181L43.8287 46.1728L43.7465 46.1438L43.7876 46.0375L43.8674 45.8514L43.9181 45.7741L43.9761 45.6943L44.0269 45.6146L44.1622 45.4816L44.3096 45.3777L44.4788 45.269L44.6528 45.1892L44.8534 45.124L45.0515 45.0732L45.5035 44.9935L45.7282 44.9645C46.3952 44.9258 47.0646 44.921 47.7316 44.9258L48.4639 44.8847L48.691 44.8582L49.1115 44.7784L49.3145 44.7228L49.503 44.6455L49.677 44.5657C49.7689 44.4932 49.8631 44.4207 49.9598 44.3531L50.0879 44.2032L49.9501 43.9398L50.0589 43.9253L50.1628 43.9012L50.2715 43.848L50.361 43.7803L50.3996 43.7562L50.4431 43.7151L50.4721 43.6619L50.5011 43.6232L50.5108 43.5701V43.4782L50.4818 43.4251L50.7089 43.384L50.9506 43.3574L51.2044 43.3429H51.4678C51.8375 43.3574 52.2049 43.3791 52.5722 43.4081C53.128 43.4758 53.6863 43.529 54.2445 43.5822L54.7448 43.6087V43.7924L54.7351 43.8746L54.7061 43.9519L54.682 44.0316L54.6529 44.0969L54.6143 44.1501C54.5684 44.2032 54.5176 44.2564 54.4669 44.3071L54.3485 44.3845L54.2204 44.4377L54.0923 44.4666L53.9449 44.4932L53.6621 44.4666L53.5147 44.4256L53.3866 44.3579L53.2489 44.2926L53.1449 44.1984L53.041 44.0945V44.3217C53.0217 44.4691 52.9975 44.6141 52.9758 44.7615L52.925 44.8992L52.896 44.9548L52.8574 44.9935L52.8284 45.0346L52.7945 45.0587V45.0587ZM42.1177 43.8093L42.4198 43.9422C42.4802 43.8915 42.543 43.8431 42.6059 43.7972L42.7243 43.7344L42.8306 43.6667L43.2294 43.5072L43.5725 43.3477L43.7465 43.2825L44.0414 43.1254L44.1598 43.0432C44.4595 42.8475 44.7615 42.6541 45.0636 42.4632L45.327 42.2771L45.5276 42.1176C45.7258 41.9388 45.9191 41.7576 46.1124 41.5739L46.1922 41.5207L46.284 41.4676C46.3952 41.412 46.504 41.3588 46.6175 41.3081L46.8423 41.2307C47.2918 41.1075 47.7485 41.0108 48.2077 40.9383C48.6765 40.8827 49.1454 40.8199 49.6142 40.7667L50.2377 40.6604C50.3924 40.6169 50.547 40.5782 50.7041 40.542L50.8636 40.3414L51.1198 40.0635L51.2938 39.8919L51.4871 39.73L51.7143 39.5584L51.9777 39.3844L52.3789 39.1476C52.6664 39.0026 52.9516 38.8576 53.2368 38.7077C53.7443 38.4709 54.2445 38.2196 54.7424 37.9634L54.9792 37.8039L55.0445 37.6033L55.1387 37.4076L55.2571 37.207L55.564 36.7961C55.7042 36.6463 55.8395 36.4965 55.9749 36.3418C56.1392 36.1823 56.3084 36.0277 56.48 35.8778L56.7361 35.6676L56.8642 35.5733L57.0019 35.4815C57.0986 35.4259 57.1953 35.3727 57.2944 35.322L57.4418 35.2543L57.5844 35.2036L57.8961 35.1214L58.0508 35.1117L58.1982 35.0972L58.3529 35.1117L58.5003 35.1359L58.4906 35.2954L58.452 35.4525L58.3335 35.786L58.2345 35.9576L58.116 36.1316L57.971 36.3152L57.797 36.5013L57.9348 36.4868L58.0532 36.4602L58.1475 36.4312L58.2369 36.3926L58.4109 36.3394L58.6598 36.3128L58.6743 36.4071V36.4989L58.6598 36.5907L58.6356 36.6705L58.5969 36.7502L58.5414 36.83L58.4906 36.8928L58.4254 36.9605C58.2417 37.1369 58.058 37.3085 57.8671 37.4776L58.0242 37.4922C58.1402 37.5284 58.2562 37.5646 58.3746 37.5961L58.5027 37.6251L58.348 37.7459C58.2248 37.8281 58.1015 37.9078 57.9759 37.9852L57.5505 38.2244L57.3379 38.3573L57.1252 38.5047L56.927 38.6642L57.0165 38.6763L57.1397 38.7295L57.1929 38.744L57.2436 38.7706L57.2871 38.7827L57.3258 38.7706L57.0624 38.918C56.898 38.9953 56.7337 39.0751 56.5718 39.1572L56.3688 39.2781L56.3301 39.3192L56.3059 39.3602L56.277 39.3989L56.2866 39.4521L56.3156 39.4931L56.3664 39.5318L56.4147 39.5753L56.3954 39.6261L56.3664 39.6696L56.3156 39.7082L56.2673 39.7493L56.1392 39.8122L55.9845 39.8798L55.6825 39.9861L55.4939 40.0804L55.7574 40.3438L55.6631 40.4357L55.5737 40.5033L55.4939 40.5444L55.3997 40.5831L55.216 40.6097H54.955L54.984 40.7305L55.0227 40.8489L55.0783 41.1171C54.914 41.2452 54.7448 41.3685 54.5732 41.4869L54.2663 41.6851L53.9255 41.8832L53.7225 41.9775L53.5244 42.0693C53.2996 42.1563 53.0749 42.2361 52.8453 42.3086L52.3305 42.4173L52.0478 42.4584C52.3547 42.4681 52.6616 42.4729 52.9685 42.4705L53.7225 42.3907L54.0536 42.3255L54.346 42.2457C54.5394 42.1805 54.7279 42.108 54.9164 42.0331L55.2837 41.8639L55.6462 41.6633L55.9869 41.4482L56.3494 41.238L56.1319 41.1317L55.9241 41.0664L55.825 41.0205C55.7501 40.9842 55.6752 40.948 55.5979 40.9166L55.4746 40.8489L55.5785 40.7716L55.7066 40.7184L55.8444 40.6676C56.0039 40.629 56.1658 40.5927 56.3253 40.5589C56.5331 40.5372 56.741 40.5106 56.9488 40.4816L57.2122 40.455L57.4152 40.4042L57.4684 40.3752L57.507 40.3342L57.4974 40.3197L57.4684 40.2931L57.4297 40.2786L57.3789 40.2544L57.2315 40.2254L57.043 40.1988L56.8594 40.1843L56.6757 40.1577L56.5114 40.1167L56.4123 40.0756L57.71 39.7856L57.9372 39.7179C58.0363 39.6816 58.1329 39.6406 58.2296 39.5995L58.3577 39.5173L58.4133 39.4666L58.3988 39.4545L58.3746 39.4255L58.2514 39.3989L58.0822 39.3844H57.8792C57.7415 39.3747 57.6061 39.3651 57.4684 39.3602L57.2992 39.3312L57.1905 39.3046L57.3789 39.2273C57.6593 39.1403 57.9444 39.0606 58.2296 38.9857C58.3915 38.9301 58.5559 38.8745 58.7202 38.8262L58.9715 38.7198L59.09 38.6546L59.1987 38.5893L59.2374 38.5482L59.2784 38.4951L59.3171 38.4564L59.3316 38.4153L59.3171 38.3742L59.2784 38.3452L59.2374 38.3356H58.87L58.696 38.3452H58.4592L58.3891 38.3356L58.3432 38.3066L58.2852 38.28C58.7685 37.961 59.2567 37.6444 59.7473 37.3351L60.1291 37.0692C60.233 36.9847 60.3321 36.8952 60.4312 36.8058L60.5496 36.6729L60.6584 36.54L60.7381 36.395L60.8034 36.25L60.842 36.0881V35.9165H60.7526L60.6584 35.931L60.4505 36.0083C60.2669 36.1243 60.0784 36.2355 59.8899 36.3418L59.786 36.4095L59.6627 36.4602L59.5443 36.5013L59.4355 36.5279L59.3316 36.5424H59.2084L59.1045 36.5013L59.4259 36.2621C59.6845 36.0421 59.9406 35.8198 60.1944 35.5975C60.4747 35.3292 60.7478 35.0562 61.016 34.7734L61.3979 34.3481C61.5115 34.1982 61.6274 34.0532 61.7459 33.9082C61.8401 33.7729 61.9344 33.6352 62.0238 33.4974L62.0528 33.4467L62.0624 33.4056L62.0528 33.35L62.0383 33.3113L62.0238 33.2678L61.9851 33.2412L61.944 33.2002L61.9054 33.1857L61.8546 33.1615L61.7966 33.147H61.6927L61.6419 33.1615L61.5719 33.1712L61.5332 33.2146L61.4776 33.2557C61.2069 33.5264 60.9387 33.8019 60.6753 34.0798L60.3539 34.3843C60.1436 34.568 59.9309 34.7492 59.7159 34.9305C59.6144 34.9982 59.5129 35.0658 59.409 35.1286L59.1165 35.2761L59.206 35.1963C59.3026 35.1045 59.3969 35.0126 59.4887 34.9184C59.8294 34.5269 60.1557 34.1209 60.4699 33.7101L61.0837 32.8473L61.248 32.5573L61.4124 32.2915L61.5453 32.0498L61.6492 31.8226L61.7145 31.639L61.7289 31.5737V31.4674L61.7145 31.4263L61.6661 31.3466L61.6371 31.32L61.5936 31.3079L61.5187 31.2644L61.4196 31.2378H61.2384L61.1876 31.2523L61.1489 31.2644L61.0934 31.2934L61.0547 31.3321L60.9459 31.4263C60.8275 31.5689 60.7115 31.7163 60.6004 31.8662C60.3345 32.2818 60.0542 32.6878 59.7642 33.0866L59.4283 33.4853L59.2591 33.6593L59.0754 33.8188L59.3123 33.3766L59.6845 32.596L59.9261 32.0257L60.03 31.7332L60.2137 31.1339C60.2596 30.9406 60.3007 30.7472 60.3369 30.5515C60.3539 30.3702 60.3684 30.189 60.3805 30.0053L60.3611 29.8724L60.3514 29.754L60.3369 29.6307L60.2983 29.4761L60.2693 29.4326L60.204 29.3673L60.1146 29.3286L60.0155 29.2997H59.9261L59.8415 29.3141L59.8174 29.3286L59.7787 29.3383L59.7642 29.3673C59.5249 30.1213 59.3437 30.8898 59.1359 31.6511C59.0585 31.8637 58.9812 32.0764 58.899 32.2891L58.7009 32.6733L58.5776 32.8449L58.6574 32.4631C58.696 32.2407 58.7299 32.0208 58.7613 31.7985L58.8169 31.2523L58.8314 31.0251C58.8241 30.9091 58.8145 30.7956 58.8024 30.6796L58.7782 30.5466L58.7395 30.4403L58.684 30.3606L58.6549 30.334L58.5752 30.3074L58.5365 30.2929H58.493L58.4544 30.3074L58.3456 30.334L58.2417 30.3871C58.1595 30.798 58.0605 31.2064 57.9493 31.61C57.7922 32.1199 57.6037 32.6202 57.3935 33.1083C57.2509 33.408 57.0986 33.7052 56.9391 33.9977L56.6467 34.5027L56.3301 34.9788C56.1174 35.2761 55.8975 35.5685 55.6704 35.8537C55.448 36.105 55.2209 36.3515 54.9913 36.598C54.752 36.8324 54.5079 37.0644 54.259 37.2916C54.0029 37.5042 53.7443 37.7096 53.4809 37.9126C53.1594 38.1446 52.8308 38.367 52.4949 38.5772L51.91 38.9204L50.9796 39.3481L50.0226 39.6913L49.23 39.933L48.4083 40.1167L47.9974 40.1843L47.1565 40.2907L46.7311 40.3172L46.69 40.3317L46.6489 40.3438L46.5692 40.3873L46.4798 40.4502C46.3759 40.5396 46.2744 40.6338 46.1729 40.7281L45.9602 40.9431L45.1893 41.8035L44.8969 42.0959L44.5537 42.3593L44.4184 42.4511L44.2855 42.5333L43.9954 42.6662C43.5459 42.8499 43.0892 43.0166 42.6373 43.1979L42.5189 43.2632L42.4125 43.3187L42.3352 43.3695L42.1878 43.5169L42.1467 43.5822L42.1177 43.6474L42.108 43.7417V43.8093\" fill=\"#FFCC4D\" />\r\n            <path d=\"M46.9824 44.4068L47.2048 44.4358L47.3135 44.4769L47.3377 44.4889V44.5034H47.3135L47.2845 44.5155L47.0719 44.5566H46.9027L46.3469 44.5155L44.9379 44.4889C44.5658 44.4938 44.1936 44.5034 43.8214 44.5155C43.4928 44.5397 43.1665 44.5663 42.8379 44.5953L42.5841 44.6364L42.3594 44.6871C42.3062 44.7064 42.2554 44.7258 42.2023 44.7403L42.1346 44.7693L42.0814 44.8104L42.1056 44.675L42.1636 44.5397L41.9775 44.5929L41.818 44.6726L41.7552 44.7137L41.6996 44.7669L41.6585 44.8297L41.6488 44.8974L41.6102 44.8055L41.5812 44.7234C41.5739 44.6654 41.5643 44.6074 41.5522 44.5518C41.5667 44.4817 41.5812 44.4116 41.5908 44.3415L41.6344 44.2739L41.6585 44.2207L41.7141 44.1579L41.8204 44.0515L41.9654 43.9573L42.1298 43.8654C42.2144 43.9162 42.3086 43.9549 42.4053 43.9839C42.4899 43.9959 42.5889 43.9814 42.688 43.9573C42.8354 44.0878 43.2173 44.0612 43.2704 43.8244C43.2922 43.747 43.2898 43.6479 43.2704 43.5585L43.4299 43.5464L43.616 43.5174L44.0269 43.4111L44.2419 43.37L44.4401 43.3193L44.6262 43.2927L44.7833 43.2782L44.718 43.3338L44.3724 43.5972L44.2419 43.689L44.4111 43.7325L44.5585 43.7591L44.2444 44.1168L44.1622 44.2231L44.2661 44.2642L44.3724 44.2932L44.4933 44.3198H44.7325L44.9694 44.2666L45.0636 44.211L45.1724 44.2666L45.2787 44.3077C45.3464 44.327 45.4164 44.3464 45.4865 44.3609C45.6509 44.3778 45.8152 44.3971 45.9819 44.4116H46.9824V44.4068ZM45.7717 40.3709L45.6533 40.6102L45.5179 40.9171C45.4478 41.0428 45.3826 41.1709 45.3222 41.2989L45.2545 41.3666L45.0974 41.2337L44.9234 41.1129L44.7373 41.0186L44.5416 40.9413L44.1139 40.8325L43.9036 40.7939C43.674 40.7673 43.4444 40.7455 43.2124 40.7286C42.9055 40.7238 42.601 40.7093 42.2965 40.6851L41.8712 40.6344L41.6319 40.5933L41.4072 40.5425L41.1703 40.4604L40.9698 40.3564L40.8224 40.2598L40.5179 40.035C40.0732 39.6169 39.6334 39.194 39.1766 38.7856L38.9132 38.6019L38.7924 38.5488L38.6667 38.5101L38.4419 38.4594C38.3114 38.4134 38.1785 38.3675 38.0456 38.3264C37.9224 38.266 37.7967 38.2104 37.671 38.1549C37.4511 38.0195 37.2409 37.8721 37.0354 37.715L36.9025 37.5918L36.6391 37.3284L36.3854 37.0504C35.9673 36.5405 35.5734 36.0137 35.1649 35.4965C34.9692 35.2887 34.771 35.0857 34.568 34.8851L34.3964 34.728L34.2224 34.583L33.8406 34.3051L33.8019 34.3172L33.7584 34.3583L33.7174 34.4114C33.6932 34.4719 33.6739 34.5347 33.6545 34.5975L33.64 34.6507L33.5434 34.6072L33.4636 34.5661L33.3669 34.525L33.2872 34.4984H33.1156L33.0213 34.525L32.9295 34.5661C33.002 34.6579 33.0721 34.7498 33.1398 34.844L33.2582 35.0301L33.4733 35.4409L33.5506 35.6415L33.5796 35.7479L33.6086 35.8276L33.6207 35.9194V35.9968H32.9054L33.0093 36.1563C33.089 36.265 33.1736 36.3714 33.2582 36.4753L33.698 36.9151L33.8454 37.0335L33.9808 37.1278C33.8648 37.1399 33.7512 37.1495 33.6352 37.1568L33.2872 37.1954L33.4056 37.3042C33.5095 37.3767 33.611 37.4516 33.7125 37.5289L33.8841 37.6474L34.0581 37.7537L34.2297 37.8479L34.3892 37.9011L34.5366 37.9398L34.655 37.9664L34.6937 37.9809L34.7227 38.0099L34.7324 38.0219V38.0727L34.6937 38.1814L34.684 38.2588L34.6671 38.3119V38.3506L34.684 38.4183L34.6937 38.4714L34.7227 38.4956L34.7614 38.5246L34.8121 38.5512L34.8798 38.5657L35.0151 38.6189L35.0804 38.643L35.1335 38.6841L35.1456 38.6986V38.7252L35.1335 38.7397L35.0272 38.817L34.974 38.8702L34.9209 38.9354V38.991L34.9088 39.0442L34.9354 39.1868L35.3994 39.3463L35.5057 39.3704L35.612 39.4139L35.6918 39.455L35.7594 39.4961L35.3196 39.8417L35.438 39.948L35.5854 40.0278L35.7715 40.1196C35.9044 40.1679 36.0374 40.2114 36.1727 40.2549L36.3709 40.2936L36.5449 40.3347H36.7019L36.5545 40.441L36.3684 40.5594L36.1703 40.6682L36.0229 40.7745L36.1558 40.8664C36.5594 41.0742 36.9726 41.2675 37.3931 41.4391C38.1278 41.7388 38.8793 41.9998 39.6358 42.2342C39.8049 42.2753 39.9717 42.3188 40.1384 42.3671L40.3511 42.4082L39.9234 42.3671C39.6575 42.3333 39.3941 42.2922 39.1283 42.2463L38.7561 42.1665L38.0239 41.9563L37.6807 41.8354C36.7624 41.4778 35.8658 41.0669 34.945 40.7189L35.0127 40.6803L35.1988 40.6126L35.3172 40.586C35.4791 40.5377 35.6362 40.4845 35.7957 40.4265C35.4791 40.3782 35.1649 40.3226 34.8508 40.2574C34.6888 40.2042 34.5245 40.1559 34.3602 40.1099L34.2659 40.0689L34.1862 40.0278L34.1209 39.9843L34.0774 39.9456V39.9335L34.0919 39.919L34.133 39.9045L34.1717 39.8779L34.278 39.8369L34.742 39.7015L35.0103 39.6097C34.626 39.5372 34.2394 39.4719 33.8527 39.4115L33.6666 39.368L33.5192 39.3173L33.466 39.2883L33.4153 39.2472L33.3718 39.223L33.3452 39.1795L33.3863 39.1529L33.5047 39.1264C33.6279 39.107 33.7536 39.0853 33.8769 39.0611L34.0895 39.0345C34.2104 39.0007 34.3288 38.9644 34.4472 38.9258L34.5028 38.8871L34.5559 38.8436L34.3457 38.7639L34.2104 38.7397L34.0774 38.7107L33.4684 38.6309L33.3089 38.5923L33.1615 38.5633L32.8691 38.4594L32.7338 38.3917L32.625 38.3144L32.5187 38.2201L32.4389 38.1017L32.4679 38.0872L32.5187 38.0727H32.5864L32.6927 38.0872L33.1978 38.1138L33.4926 38.1428H33.8624L33.9663 38.1283L34.0484 38.1017L34.1016 38.0727C33.8527 37.9712 33.6038 37.8649 33.3573 37.7537C33.1954 37.6715 33.031 37.5918 32.8643 37.5144L32.3616 37.251L32.1224 37.1036C31.9749 36.9997 31.8299 36.8934 31.6849 36.7846L31.4989 36.6251L31.4167 36.5333L31.3345 36.4535L31.2838 36.3738L31.2282 36.2795L31.175 36.2022L31.146 36.1104L31.1243 35.9388H31.2137L31.32 35.9509L31.4264 35.9944L31.5327 36.033L31.7429 36.1659L31.9822 36.2989L32.0885 36.3665L32.2069 36.4294L32.3254 36.4825L32.4317 36.5236L32.5501 36.5526L32.6564 36.5647H32.7773L32.8812 36.5236L32.567 36.2819C32.306 36.0669 32.0498 35.8445 31.7961 35.6222C31.3756 35.221 30.972 34.8054 30.5854 34.3704L30.4162 34.1456L30.2422 33.9329C30.1479 33.7976 30.0537 33.6599 29.9619 33.5197L29.9377 33.4665V33.3747L29.9498 33.3336L29.9619 33.2949L30.0029 33.2684L30.0416 33.2273L30.0851 33.1983L30.1359 33.1838L30.189 33.1741H30.2954L30.3606 33.1838L30.4186 33.1983L30.4694 33.2394C30.7569 33.5245 31.0397 33.8121 31.3176 34.1045C31.6245 34.3994 31.9435 34.6845 32.2746 34.9552L32.5791 35.1509L32.7362 35.2331L32.8836 35.2839L32.7797 35.2186L32.5018 34.9407C32.161 34.5492 31.8372 34.1432 31.5182 33.7324C31.378 33.539 31.2403 33.3457 31.1049 33.1475C30.9841 32.9542 30.8609 32.7657 30.7328 32.5772C30.6313 32.4104 30.5346 32.2437 30.4404 32.0721C30.3872 31.9344 30.3292 31.7966 30.2712 31.6613L30.2543 31.596V31.4873L30.2712 31.4486L30.3219 31.3689L30.3509 31.3399L30.392 31.3157L30.5636 31.2601H30.7497L30.8029 31.2722L30.8415 31.2867L30.8947 31.3157L31.0421 31.4486L31.3877 31.8884C31.6584 32.3041 31.9435 32.7101 32.2384 33.1089L32.5525 33.5076L32.7265 33.6792L32.9126 33.8387C32.7024 33.4375 32.4969 33.0315 32.3036 32.6207C32.2214 32.4322 32.1417 32.2413 32.0644 32.0504L31.958 31.7579C31.9024 31.5574 31.8396 31.3568 31.7719 31.1586L31.7067 30.8662L31.6584 30.5689L31.6294 30.291L31.6173 30.0276L31.6294 29.8947L31.6463 29.7739L31.6584 29.653L31.6849 29.5346L31.7115 29.4911L31.726 29.4524L31.7647 29.4089L31.7913 29.3848L31.8831 29.3437L31.9774 29.3195H32.0692L32.1489 29.334L32.1876 29.3437L32.2166 29.3582L32.2311 29.3872L32.2456 29.4259C32.4728 30.1678 32.6589 30.9218 32.8546 31.6734C32.9319 31.8836 33.0117 32.0914 33.0963 32.2969L33.1881 32.495L33.2944 32.6811L33.4129 32.8672L33.3355 32.4805C33.3041 32.2582 33.2703 32.0383 33.2292 31.8208C33.2026 31.5646 33.1808 31.306 33.1639 31.0499L33.1905 30.7043L33.2171 30.5689L33.2582 30.465L33.3114 30.3853L33.3379 30.3563L33.3766 30.3297L33.4153 30.3176H33.5361L33.6449 30.3563L33.7488 30.4094L33.9349 31.2456C34.0025 31.4994 34.0774 31.7531 34.1596 32.002C34.2949 32.3814 34.4424 32.7584 34.5994 33.1306L34.7855 33.5149L35.0514 34.0224L35.3414 34.525L35.6628 35.0035L36.0059 35.4796L36.3274 35.8784C36.5497 36.1297 36.7744 36.3786 37.004 36.6227C37.2433 36.8571 37.4874 37.0867 37.7363 37.3114L38.1205 37.6329C38.4734 37.9084 38.8359 38.1694 39.2104 38.4159C39.5029 38.5899 39.8001 38.759 40.0998 38.9209L41.0133 39.3608C41.4773 39.5444 41.9461 39.7136 42.4198 39.8634C42.8838 39.9867 43.355 40.093 43.8287 40.1824C44.4643 40.2839 45.1168 40.3444 45.7717 40.3709\" fill=\"#FFCC4D\" />\r\n            <path d=\"M8.35442 56.8448C8.35442 56.8448 7.78167 57.3209 7.58833 57.0816C7.27658 56.695 8.54775 54.7641 8.54775 54.0826C8.54775 52.9685 7.801 52.6591 6.88267 52.5021C6.264 52.3957 5.26108 52.548 5.26108 52.548C5.44958 52.8017 5.57283 52.8815 5.89183 52.896C5.53658 53.0845 5.1765 53.4832 5.1765 54.1067C5.1765 55.0637 5.57283 55.4601 5.57283 56.5451C5.57283 57.1469 5.07983 57.9106 5.07983 57.9106C5.94983 57.8236 6.38483 57.0188 6.13833 56.3711C6.2785 56.3518 6.40175 56.3808 6.5105 56.4847C6.57333 56.3083 6.47425 56.0981 6.33892 55.9216C6.44767 55.8661 6.52742 55.8999 6.699 55.9337C6.68208 55.7501 6.57092 55.5567 6.30267 55.3731C7.08567 55.5736 7.56658 55.0299 7.56658 54.4596C7.56658 54.0246 7.2645 53.7152 6.96725 53.7152C6.87058 53.7152 6.73042 53.7563 6.65067 53.8143C6.59508 53.6983 6.62408 53.5388 6.67967 53.4204C6.46458 53.476 6.32683 53.6041 6.42592 53.8747C6.25917 53.8868 6.12625 53.9448 6.03683 54.0536C6.12867 54.1671 6.26642 54.2348 6.42592 54.2276C6.30508 54.4789 6.44042 54.6215 6.63617 54.7326C6.63617 54.7326 6.5105 54.2276 6.83192 54.2276C6.97692 54.2276 7.10742 54.2783 7.10742 54.4886C7.10742 54.6698 6.9455 54.926 6.57333 54.9115C6.19875 54.8946 5.89667 54.6529 5.89667 54.0608C5.89667 53.5074 6.33892 53.2343 6.92133 53.2174C7.44817 53.2005 7.8445 53.4856 7.8445 54.0294C7.8445 54.7496 6.8005 56.3977 6.8005 57.0406C6.8005 57.5239 7.23308 57.7921 7.65842 57.7921C8.20942 57.7921 8.67342 57.246 8.67342 57.246L8.35442 56.8448V56.8448ZM8.23358 43.79C8.23358 42.5865 9.31625 41.9654 10.1669 41.9654C11.3124 41.9654 11.9238 42.6517 11.9238 43.5459C11.9238 44.0582 11.8296 44.3772 11.5952 44.863L8.96825 50.3174C8.87642 50.5083 8.845 50.7258 8.845 51.0424C8.845 51.5306 9.32108 51.9317 9.81892 51.9438C10.2708 51.9559 10.7663 51.5209 10.7663 51.0255C10.7663 50.4237 10.4569 50.1579 10.1355 50.1579C9.74158 50.1579 9.5845 50.3174 9.5845 50.5953C9.5845 50.7911 9.67875 50.8732 9.81167 50.8732C10.15 50.8732 10.0557 50.4189 10.0557 50.4189C10.2225 50.4576 10.3578 50.6267 10.2829 50.8442C10.4062 50.8708 10.5197 50.9336 10.6092 51.0351C10.5197 51.1246 10.4134 51.1922 10.2829 51.214C10.3627 51.475 10.2563 51.6031 10.0292 51.6586C10.0751 51.5547 10.0751 51.4653 10.0606 51.3783C9.7005 51.4798 9.1495 51.3203 9.1495 50.6968C9.1495 50.0781 9.57725 49.5586 10.382 49.6866C10.1887 49.5996 10.0944 49.4136 10.0751 49.2009C10.2201 49.2613 10.382 49.2686 10.382 49.2686C10.2878 49.1042 10.1573 48.9616 10.1621 48.633C10.3119 48.7031 10.4497 48.8263 10.6406 48.7466C10.3409 48.1593 10.7082 47.3521 11.6459 47.1564C11.3027 47.5551 11.136 47.9901 11.136 48.4227C11.136 49.8244 11.5275 50.0564 11.5275 51.0279C11.5275 51.4339 11.3173 51.8761 10.904 52.1734V52.1565C11.1747 52.229 11.3511 52.3667 11.4526 52.548C10.8267 52.7244 9.91558 52.722 9.42983 52.5311C8.86675 52.4682 8.47525 52.0356 8.35925 51.8181C8.24325 51.5958 8.0185 50.808 8.35925 50.0926C8.73142 49.3169 10.4859 45.5976 11.0321 44.4256C11.1481 44.1791 11.2182 43.9132 11.2182 43.6281C11.2182 42.9151 10.5633 42.6638 10.1911 42.6638C9.744 42.6638 9.28967 43.007 9.28967 43.4275C9.28967 43.6981 9.43708 43.8576 9.64492 43.8576C10.15 43.8576 10.1186 43.4299 10.0171 43.1592C10.3288 43.3042 10.5125 43.5507 10.4618 43.8166C10.6406 43.8407 10.8098 43.9253 10.9644 44.0993C10.8412 44.2588 10.6913 44.3748 10.4618 44.3772C10.5633 44.7881 10.2878 44.9621 10.0171 45.0563C10.1017 44.7566 10.1573 44.4062 9.64492 44.4062C9.27033 44.4062 8.9755 44.341 8.80392 44.0969C8.79183 44.4231 8.76042 45.704 8.76042 45.704C8.74108 46.1873 9.40567 46.1728 9.82858 46.0302C9.66667 46.5861 9.34042 46.8881 8.57917 46.8108C8.76525 46.8881 8.961 47.0621 8.961 47.3932C8.961 47.8476 8.59367 48.3478 8.35442 48.4976L8.23358 43.79V43.79Z\" fill=\"#FFCC4D\" />\r\n            <path d=\"M8.47284 43.79C8.47284 42.5865 7.39018 41.9654 6.53951 41.9654C5.39401 41.9654 4.78259 42.6518 4.78259 43.5459C4.78259 44.0583 4.87684 44.3773 5.11126 44.863L7.73818 50.3174C7.83001 50.5084 7.85901 50.7259 7.85901 51.0424C7.85901 51.5306 7.38293 51.9318 6.88751 51.9439C6.43318 51.9559 5.94018 51.5209 5.94018 51.0255C5.94018 50.4238 6.24951 50.1579 6.57093 50.1579C6.96484 50.1579 7.12193 50.3174 7.12193 50.5954C7.12193 50.7911 7.02768 50.8733 6.89476 50.8733C6.55643 50.8733 6.65068 50.4189 6.65068 50.4189C6.48393 50.4576 6.34618 50.6268 6.42351 50.8443C6.30026 50.8709 6.18668 50.9337 6.09726 51.0352C6.18668 51.1246 6.29301 51.1923 6.42351 51.214C6.34618 51.475 6.45251 51.6031 6.67968 51.6563C6.63376 51.5524 6.63376 51.4629 6.64826 51.3759C7.00834 51.4774 7.55934 51.3179 7.55934 50.6944C7.55934 50.0758 7.13159 49.5562 6.32926 49.6843C6.52018 49.5973 6.61684 49.4112 6.63376 49.1985C6.48876 49.2589 6.32926 49.2662 6.32926 49.2662C6.42109 49.1019 6.55159 48.9593 6.54676 48.6306C6.39693 48.7007 6.26159 48.8239 6.06826 48.7442C6.36793 48.1569 6.00059 47.3498 5.06293 47.154C5.40609 47.5528 5.57284 47.9878 5.57284 48.4204C5.57284 49.822 5.18376 50.054 5.18376 51.0255C5.18376 51.4315 5.39401 51.8738 5.80726 52.171V52.1541C5.53418 52.2266 5.35776 52.3644 5.25868 52.5456C5.88459 52.722 6.79326 52.7196 7.28143 52.5287C7.84451 52.4659 8.23601 52.0333 8.35201 51.8158C8.46801 51.5934 8.69276 50.8056 8.35201 50.0903C7.97984 49.3145 6.22534 45.5953 5.67918 44.4232C5.56318 44.1767 5.49309 43.9109 5.49309 43.6257C5.49309 42.9128 6.14801 42.6614 6.52018 42.6614C6.96726 42.6614 7.42159 43.0046 7.42159 43.4251C7.42159 43.6958 7.27418 43.8553 7.06634 43.8553C6.56126 43.8553 6.59268 43.4275 6.69176 43.1569C6.38001 43.3019 6.19634 43.5484 6.24709 43.8142C6.07068 43.8384 5.90151 43.9229 5.74443 44.0969C5.86768 44.2564 6.01751 44.3724 6.24709 44.3749C6.14559 44.7857 6.42109 44.9597 6.69176 45.0539C6.60718 44.7543 6.55159 44.4039 7.06634 44.4039C7.44093 44.4039 7.73576 44.3386 7.90734 44.0945L7.95084 45.7016C7.97018 46.1849 7.30318 46.1704 6.88026 46.0279C7.03976 46.5813 7.36843 46.8834 8.12726 46.806C7.94118 46.8834 7.74543 47.0574 7.74543 47.3884C7.74543 47.8428 8.11034 48.343 8.35201 48.4929L8.47284 43.79V43.79ZM8.35443 56.8449C8.35443 56.8449 8.92718 57.3209 9.12051 57.0817C9.43226 56.695 8.16109 54.7641 8.16109 54.0826C8.16109 52.9685 8.90784 52.6592 9.82618 52.5021C10.4448 52.3958 11.4502 52.548 11.4502 52.548C11.2593 52.8018 11.1384 52.8815 10.8194 52.896C11.1723 53.0845 11.5348 53.4833 11.5348 54.1068C11.5348 55.0638 11.1384 55.4601 11.1384 56.5452C11.1384 57.1469 11.6314 57.9106 11.6314 57.9106C10.7614 57.8236 10.3264 57.0189 10.5729 56.3712C10.4352 56.3519 10.3119 56.3809 10.2008 56.4848C10.1379 56.3084 10.2394 56.0981 10.3723 55.9217C10.2636 55.8661 10.1838 55.8999 10.0123 55.9338C10.0292 55.7501 10.1379 55.5568 10.4086 55.3731C9.62559 55.5737 9.14468 55.0299 9.14468 54.4596C9.14468 54.0246 9.44676 53.7153 9.74401 53.7153C9.84068 53.7153 9.98084 53.7564 10.0606 53.8144C10.1162 53.6984 10.0872 53.5389 10.0292 53.4204C10.2467 53.476 10.382 53.6041 10.2853 53.8748C10.4521 53.8869 10.5826 53.9449 10.6744 54.0536C10.5826 54.1672 10.4448 54.2349 10.2853 54.2276C10.4062 54.4789 10.2708 54.6215 10.0751 54.7327C10.0751 54.7327 10.2008 54.2276 9.87934 54.2276C9.73434 54.2276 9.60384 54.2784 9.60384 54.4886C9.60384 54.6699 9.76576 54.926 10.1379 54.9115C10.5101 54.8946 10.8122 54.6529 10.8122 54.0609C10.8122 53.5074 10.3699 53.2344 9.78751 53.2174C9.26068 53.2005 8.86434 53.4857 8.86434 54.0294C8.86434 54.7496 9.90834 56.3978 9.90834 57.0406C9.90834 57.5239 9.47576 57.7922 9.05043 57.7922C8.49943 57.7922 8.03543 57.246 8.03543 57.246L8.35443 56.8449V56.8449ZM8.23359 22.6611C8.23359 21.4528 9.31626 20.8341 10.1669 20.8341C11.3124 20.8341 11.9238 21.5204 11.9238 22.417C11.9238 22.9269 11.8296 23.2459 11.5952 23.7317L8.96826 29.1885C8.87643 29.3794 8.84501 29.5945 8.84501 29.9111C8.84501 30.4017 9.32109 30.8004 9.81893 30.8149C10.2708 30.8246 10.7663 30.3896 10.7663 29.8966C10.7663 29.2973 10.4569 29.029 10.1355 29.029C9.74159 29.029 9.58451 29.1909 9.58451 29.4689C9.58451 29.6598 9.67876 29.7444 9.81168 29.7444C10.15 29.7444 10.0558 29.29 10.0558 29.29C10.2225 29.3263 10.3578 29.4979 10.2829 29.7105C10.4062 29.7371 10.5198 29.8024 10.6092 29.9039C10.5198 29.9933 10.4134 30.0609 10.2829 30.0851C10.3627 30.3461 10.2563 30.4718 10.0292 30.5274C10.0751 30.4259 10.0751 30.334 10.0606 30.247C9.70051 30.3485 9.14951 30.189 9.14951 29.5655C9.14951 28.9493 9.57726 28.4297 10.382 28.5578C10.1887 28.4659 10.0944 28.2799 10.0751 28.072C10.2201 28.13 10.382 28.1349 10.382 28.1349C10.2878 27.9705 10.1573 27.8279 10.1621 27.5017C10.3119 27.5694 10.4497 27.695 10.6406 27.6153C10.3409 27.0256 10.7083 26.216 11.6459 26.0251C11.3028 26.4263 11.136 26.8613 11.136 27.2914C11.136 28.6907 11.5275 28.9251 11.5275 29.899C11.5275 30.305 11.3173 30.7449 10.904 31.0445V31.0276C11.1698 31.1001 11.3438 31.233 11.4478 31.4167C10.8218 31.5955 9.91076 31.5907 9.42501 31.3998C8.86193 31.3345 8.47043 30.9044 8.35443 30.6869C8.23843 30.4669 8.01368 29.6767 8.35443 28.9662C8.72659 28.188 10.4811 24.4688 11.0273 23.2967C11.1408 23.0478 11.2133 22.7844 11.2133 22.4992C11.2133 21.7839 10.5584 21.5325 10.1863 21.5325C9.73918 21.5325 9.28484 21.8733 9.28484 22.2938C9.28484 22.5644 9.43226 22.7264 9.64009 22.7264C10.1452 22.7264 10.1138 22.2962 10.0123 22.0279C10.324 22.1681 10.5077 22.4194 10.4569 22.6853C10.6358 22.7094 10.8049 22.7916 10.9596 22.9704C10.8363 23.1251 10.6865 23.2411 10.4569 23.2459C10.5584 23.6592 10.2829 23.8332 10.0123 23.9274C10.0968 23.6278 10.1524 23.2798 9.64009 23.2798C9.26551 23.2798 8.97068 23.2145 8.79909 22.9729C8.78701 23.2967 8.75559 24.5799 8.75559 24.5799C8.73626 25.0609 9.40084 25.0488 9.82376 24.9038C9.66668 25.4596 9.34043 25.7593 8.57918 25.6819C8.76526 25.7593 8.96101 25.9333 8.96101 26.2668C8.96101 26.7187 8.59368 27.2214 8.35443 27.3688L8.23359 22.6611V22.6611Z\" fill=\"#FFCC4D\" />\r\n            <path d=\"M8.47284 22.6611C8.47284 21.4528 7.39018 20.8341 6.53951 20.8341C5.39401 20.8341 4.78259 21.5204 4.78259 22.417C4.78259 22.9269 4.87684 23.2459 5.11126 23.7317L7.73818 29.1885C7.83001 29.3794 7.85901 29.5945 7.85901 29.9111C7.85901 30.4017 7.38293 30.8004 6.88751 30.8149C6.43318 30.8246 5.94018 30.3896 5.94018 29.8966C5.94018 29.2973 6.24951 29.029 6.57093 29.029C6.96484 29.029 7.12193 29.1909 7.12193 29.4689C7.12193 29.6598 7.02768 29.7444 6.89476 29.7444C6.55643 29.7444 6.65068 29.29 6.65068 29.29C6.48393 29.3263 6.34618 29.4979 6.42351 29.7105C6.30026 29.7371 6.18668 29.8024 6.09726 29.9039C6.18668 29.9933 6.29301 30.0609 6.42351 30.0851C6.34618 30.3461 6.45009 30.4718 6.67726 30.5274C6.63134 30.4259 6.63134 30.334 6.64584 30.247C7.00593 30.3485 7.55693 30.189 7.55693 29.5655C7.55693 28.9493 7.12918 28.4297 6.32684 28.5578C6.51776 28.4659 6.61443 28.2799 6.63134 28.072C6.48634 28.13 6.32684 28.1349 6.32684 28.1349C6.41868 27.9705 6.54918 27.8279 6.54434 27.5017C6.39451 27.5694 6.25918 27.695 6.06584 27.6153C6.36551 27.0256 5.99818 26.216 5.06051 26.0251C5.40368 26.4263 5.57043 26.8613 5.57043 27.2914C5.57043 28.6907 5.18134 28.9251 5.18134 29.899C5.18134 30.305 5.39159 30.7449 5.80484 31.0445V31.0276C5.53659 31.1001 5.36018 31.233 5.26109 31.4167C5.88701 31.5955 6.79568 31.5907 7.28384 31.3998C7.84693 31.3345 8.23843 30.9044 8.35443 30.6869C8.47043 30.4669 8.69518 29.6767 8.35443 28.9662C7.98226 28.188 6.22776 24.4688 5.68159 23.2967C5.56559 23.0478 5.49551 22.7868 5.49551 22.5016C5.49551 21.7863 6.15043 21.5349 6.52259 21.5349C6.96968 21.5349 7.42401 21.8757 7.42401 22.2962C7.42401 22.5669 7.27659 22.7288 7.06876 22.7288C6.56368 22.7288 6.59509 22.2986 6.69418 22.0304C6.38243 22.1705 6.19876 22.4219 6.24951 22.6877C6.07309 22.7119 5.90393 22.794 5.74684 22.9729C5.87009 23.1275 6.01993 23.2435 6.24951 23.2484C6.14801 23.6616 6.42351 23.8356 6.69418 23.9299C6.60959 23.6302 6.55401 23.2822 7.06876 23.2822C7.44334 23.2822 7.73818 23.2169 7.90976 22.9753L7.95084 24.5775C7.97018 25.0584 7.30318 25.0464 6.88026 24.9014C7.03976 25.4572 7.36843 25.7569 8.12726 25.6819C7.94118 25.7593 7.74543 25.9333 7.74543 26.2668C7.74543 26.7187 8.11034 27.2214 8.35201 27.3688L8.47284 22.6611V22.6611Z\" fill=\"#FFCC4D\" />\r\n            <path d=\"M8.47284 19.0409C8.47284 20.2469 7.39018 20.8679 6.53951 20.8679C5.39401 20.8679 4.78259 20.1816 4.78259 19.2826C4.78259 18.7751 4.87684 18.4561 5.11126 17.9679L7.73818 12.5111C7.83001 12.3202 7.85901 12.1051 7.85901 11.7885C7.85901 11.3004 7.38293 10.8992 6.88751 10.8871C6.43318 10.8774 5.94018 11.31 5.94018 11.8054C5.94018 12.4072 6.24951 12.673 6.57093 12.673C6.96484 12.673 7.12193 12.5111 7.12193 12.2332C7.12193 12.0399 7.02768 11.9577 6.89476 11.9577C6.55643 11.9577 6.65068 12.412 6.65068 12.412C6.48393 12.3758 6.34618 12.2042 6.42351 11.9891C6.30268 11.9674 6.18909 11.9021 6.09726 11.7982C6.18668 11.7112 6.29301 11.6435 6.42351 11.6194C6.34618 11.3584 6.45251 11.2327 6.67968 11.1771C6.63376 11.2786 6.63376 11.3704 6.64826 11.4574C7.00834 11.3559 7.55934 11.5203 7.55934 12.1389C7.55934 12.7552 7.13159 13.2748 6.32926 13.1467C6.52018 13.2385 6.61684 13.4246 6.63376 13.6324C6.48876 13.5769 6.32926 13.5696 6.32926 13.5696C6.42109 13.7339 6.55159 13.8765 6.54676 14.2028C6.39693 14.1351 6.26159 14.0094 6.06826 14.0892C6.36793 14.6789 6.00059 15.4884 5.06293 15.6818C5.40609 15.2782 5.57284 14.8456 5.57284 14.413C5.57284 13.0162 5.18376 12.7794 5.18376 11.8079C5.18376 11.4019 5.39401 10.962 5.80726 10.6624V10.6793C5.53659 10.6044 5.36018 10.469 5.26109 10.2854C5.88701 10.1089 6.79568 10.1114 7.28384 10.3047C7.84693 10.3699 8.23843 10.8001 8.35443 11.02C8.47043 11.2375 8.69518 12.0278 8.35443 12.7407C7.98226 13.5189 6.22776 17.2381 5.68159 18.4078C5.56559 18.6543 5.49551 18.9177 5.49551 19.2029C5.49551 19.9206 6.15043 20.1695 6.52259 20.1695C6.96968 20.1695 7.42401 19.8288 7.42401 19.4059C7.42401 19.1376 7.27659 18.9733 7.06876 18.9733C6.56368 18.9733 6.59509 19.401 6.69418 19.6717C6.38243 19.5315 6.19876 19.2802 6.24951 19.0144C6.07309 18.9902 5.90393 18.9056 5.74684 18.7292C5.87009 18.5745 6.01993 18.4561 6.24951 18.4537C6.14801 18.0429 6.42351 17.8664 6.69418 17.7698C6.60959 18.0719 6.55401 18.4223 7.06876 18.4223C7.44334 18.4223 7.73818 18.4851 7.90976 18.7292L7.95326 17.1197C7.97259 16.6388 7.30559 16.6533 6.88268 16.7959C7.04218 16.24 7.37084 15.9404 8.12968 16.0153C7.94359 15.9379 7.74784 15.7639 7.74784 15.4304C7.74784 14.9785 8.11276 14.4759 8.35443 14.3284L8.47284 19.0409V19.0409ZM8.47284 40.1723C8.47284 41.3782 7.39018 41.9969 6.53951 41.9969C5.39401 41.9969 4.78259 41.3129 4.78259 40.4164C4.78259 39.9064 4.87684 39.585 5.11126 39.1017L7.73818 33.6449C7.83001 33.4539 7.85901 33.2389 7.85901 32.9223C7.85901 32.4317 7.38293 32.0329 6.88751 32.0209C6.43318 32.0088 5.94018 32.4438 5.94018 32.9368C5.94018 33.5361 6.24951 33.8044 6.57093 33.8044C6.96484 33.8044 7.12193 33.6424 7.12193 33.3645C7.12193 33.1736 7.02768 33.0914 6.89476 33.0914C6.55643 33.0914 6.65068 33.5458 6.65068 33.5458C6.48393 33.5071 6.34618 33.3379 6.42351 33.1229C6.30026 33.0987 6.18668 33.0334 6.09726 32.9295C6.18668 32.8425 6.29301 32.7724 6.42351 32.7507C6.34618 32.4873 6.45009 32.3616 6.67726 32.306C6.63134 32.4075 6.63134 32.4994 6.64584 32.5864C7.00593 32.4849 7.55693 32.6468 7.55693 33.2679C7.55693 33.8841 7.12918 34.4013 6.32684 34.2756C6.51776 34.3699 6.61443 34.5535 6.63134 34.7638C6.48634 34.7082 6.32684 34.6985 6.32684 34.6985C6.41868 34.8629 6.54918 35.0079 6.54434 35.3317C6.39451 35.264 6.25918 35.1384 6.06584 35.2181C6.36551 35.8054 5.99818 36.6198 5.06051 36.8083C5.40368 36.4095 5.57043 35.9721 5.57043 35.5419C5.57043 34.1475 5.18134 33.9083 5.18134 32.9368C5.18134 32.5284 5.39159 32.0885 5.80484 31.7913V31.8058C5.53659 31.7357 5.36018 31.6028 5.26109 31.4167C5.88701 31.2403 6.79568 31.2427 7.28384 31.436C7.84693 31.5013 8.23843 31.9314 8.35443 32.1489C8.47043 32.3689 8.69518 33.1567 8.35443 33.8696C7.98226 34.6478 6.22776 38.367 5.68159 39.5391C5.56559 39.7856 5.49551 40.0466 5.49551 40.3342C5.49551 41.0495 6.15043 41.2984 6.52259 41.2984C6.96968 41.2984 7.42401 40.9577 7.42401 40.5348C7.42401 40.2714 7.27659 40.107 7.06876 40.107C6.56368 40.107 6.59509 40.5348 6.69418 40.803C6.38243 40.6629 6.19876 40.4091 6.24951 40.1457C6.07309 40.1215 5.90393 40.0418 5.74684 39.8629C5.87009 39.7107 6.01993 39.5947 6.24951 39.585C6.14801 39.1742 6.42351 39.0026 6.69418 38.9059C6.60959 39.208 6.55401 39.556 7.06876 39.556C7.44334 39.556 7.73818 39.6189 7.90976 39.8654L7.95326 38.2559C7.97259 37.7774 7.30559 37.7894 6.88268 37.932C7.04218 37.3786 7.37084 37.0789 8.12968 37.1539C7.94359 37.0765 7.74784 36.9025 7.74784 36.569C7.74784 36.1171 8.11276 35.6169 8.35443 35.467L8.47284 40.1723V40.1723Z\" fill=\"#FFCC4D\" />\r\n            <path d=\"M8.23354 40.1722C8.23354 41.3781 9.31621 41.9968 10.1669 41.9968C11.3124 41.9968 11.9238 41.3129 11.9238 40.4163C11.9238 39.9064 11.8295 39.585 11.5951 39.1016L8.96821 33.6448C8.87638 33.4539 8.84496 33.2388 8.84496 32.9222C8.84496 32.4316 9.32104 32.0329 9.81888 32.0208C10.2708 32.0087 10.7662 32.4437 10.7662 32.9367C10.7662 33.5361 10.4569 33.8043 10.1355 33.8043C9.74154 33.8043 9.58446 33.6424 9.58446 33.3645C9.58446 33.1736 9.67871 33.0914 9.81163 33.0914C10.15 33.0914 10.0557 33.5457 10.0557 33.5457C10.2225 33.5071 10.3578 33.3379 10.2829 33.1228C10.4061 33.0986 10.5197 33.0334 10.6091 32.9295C10.5197 32.8425 10.4134 32.7724 10.2829 32.7506C10.3626 32.4872 10.2563 32.3616 10.0291 32.306C10.075 32.4075 10.075 32.4993 10.0605 32.5863C9.70046 32.4848 9.14946 32.6467 9.14946 33.2678C9.14946 33.8841 9.57721 34.4012 10.382 34.2756C10.1886 34.3698 10.0944 34.5535 10.075 34.7637C10.22 34.7081 10.382 34.6985 10.382 34.6985C10.2877 34.8628 10.1572 35.0078 10.162 35.3316C10.3119 35.264 10.4496 35.1383 10.6405 35.2181C10.3409 35.8053 10.7082 36.6197 11.6459 36.8082C11.3027 36.4095 11.136 35.9721 11.136 35.5419C11.136 34.1475 11.5275 33.9082 11.5275 32.9367C11.5275 32.5283 11.3172 32.0885 10.904 31.7912V31.8057C11.1746 31.7332 11.351 31.6003 11.4525 31.4142C10.8266 31.2378 9.91554 31.2402 9.42979 31.4336C8.86671 31.4988 8.47521 31.929 8.35921 32.1465C8.24321 32.3664 8.01846 33.1542 8.35921 33.8671C8.73138 34.6453 10.4859 38.3646 11.032 39.5366C11.148 39.7831 11.2181 40.0441 11.2181 40.3317C11.2181 41.0471 10.5632 41.296 10.191 41.296C9.74396 41.296 9.28963 40.9552 9.28963 40.5323C9.28963 40.2689 9.43704 40.1046 9.64488 40.1046C10.15 40.1046 10.1185 40.5323 10.017 40.8006C10.3288 40.6604 10.5125 40.4066 10.4617 40.1432C10.6405 40.1191 10.8097 40.0393 10.9644 39.8605C10.8411 39.7082 10.6913 39.5922 10.4617 39.5826C10.5632 39.1717 10.2877 39.0001 10.017 38.9035C10.1016 39.2056 10.1572 39.5536 9.64488 39.5536C9.27029 39.5536 8.97546 39.6164 8.80388 39.8629C8.79179 39.5391 8.76038 38.2534 8.76038 38.2534C8.74104 37.7749 9.40563 37.787 9.82854 37.9296C9.66663 37.3761 9.34038 37.0765 8.57913 37.1514C8.76521 37.0741 8.96096 36.9001 8.96096 36.5666C8.96096 36.1146 8.59363 35.6144 8.35438 35.4646L8.23354 40.1722V40.1722ZM8.35438 5.9909C8.35438 5.9909 8.92713 5.50998 9.12046 5.74923C9.43221 6.13831 8.16104 8.06923 8.16104 8.75073C8.16104 9.86723 8.90779 10.1693 9.82613 10.3288C10.4448 10.4376 11.4501 10.2853 11.4501 10.2853C11.2568 10.0316 11.136 9.95665 10.817 9.93731C11.1698 9.75365 11.5323 9.3549 11.5323 8.7314C11.5323 7.76956 11.136 7.37323 11.136 6.29056C11.136 5.68881 11.629 4.92273 11.629 4.92273C10.759 5.01215 10.324 5.8169 10.5705 6.46215C10.4327 6.4839 10.3095 6.45006 10.2007 6.34856C10.1379 6.5274 10.2394 6.73523 10.3723 6.91406C10.2635 6.97206 10.1838 6.93581 10.0122 6.89956C10.0291 7.08565 10.1379 7.27898 10.4085 7.46265C9.62313 7.25965 9.14221 7.80581 9.14221 8.37856C9.14221 8.81115 9.44429 9.11806 9.74154 9.11806C9.83821 9.11806 9.97838 9.0794 10.0581 9.01898C10.1137 9.1374 10.0847 9.2969 10.0267 9.41531C10.2442 9.35973 10.3795 9.22923 10.2829 8.96098C10.4496 8.94406 10.5801 8.88848 10.672 8.78215C10.5777 8.66615 10.44 8.6009 10.2805 8.60573C10.4013 8.3544 10.266 8.21423 10.0702 8.10306C10.0702 8.10306 10.1959 8.60573 9.87446 8.60573C9.72946 8.60573 9.59896 8.5574 9.59896 8.34715C9.59896 8.16348 9.76088 7.90731 10.133 7.92423C10.5052 7.93873 10.8073 8.1804 10.8073 8.77731C10.8073 9.3259 10.365 9.59656 9.78263 9.6159C9.25821 9.6304 8.86188 9.34523 8.86188 8.80389C8.86188 8.08131 9.90588 6.43798 9.90588 5.79273C9.90588 5.3094 9.47329 5.03873 9.04796 5.03873C8.49696 5.03873 8.03296 5.5849 8.03296 5.5849L8.35438 5.9909V5.9909Z\" fill=\"#FFCC4D\" />\r\n            <path d=\"M8.35445 5.9909C8.35445 5.9909 7.7817 5.50998 7.58837 5.74923C7.2742 6.14073 8.54779 8.07165 8.54779 8.75315C8.54779 9.86965 7.80104 10.1717 6.8827 10.3312C6.26404 10.4376 5.26112 10.2853 5.26112 10.2853C5.44962 10.0316 5.57287 9.95665 5.89187 9.93731C5.53662 9.75365 5.17412 9.3549 5.17412 8.7314C5.17412 7.76956 5.57045 7.37323 5.57045 6.29056C5.57045 5.68881 5.07745 4.92273 5.07745 4.92273C5.94745 5.01215 6.38245 5.8169 6.13595 6.46215C6.27612 6.48148 6.39937 6.45006 6.50812 6.34856C6.57095 6.5274 6.47187 6.73523 6.33654 6.91406C6.44287 6.97206 6.52262 6.93581 6.69662 6.89956C6.6797 7.08565 6.56854 7.27898 6.30029 7.46265C7.08329 7.25965 7.5642 7.80581 7.5642 8.37856C7.5642 8.81115 7.26212 9.11806 6.96487 9.11806C6.8682 9.11806 6.72804 9.0794 6.64829 9.01898C6.59512 9.13981 6.62412 9.2969 6.6797 9.41531C6.46462 9.35973 6.32929 9.22923 6.42595 8.96339C6.2592 8.94648 6.12629 8.8909 6.03687 8.78456C6.1287 8.66856 6.26645 8.6009 6.42595 8.60573C6.30512 8.3544 6.44045 8.21423 6.6362 8.10306C6.6362 8.10306 6.51054 8.60573 6.83195 8.60573C6.97695 8.60573 7.10745 8.5574 7.10745 8.34715C7.10745 8.16348 6.94554 7.90731 6.57337 7.92423C6.19879 7.93873 5.8967 8.18039 5.8967 8.77489C5.8967 9.32348 6.33895 9.59415 6.92137 9.61348C7.4482 9.62798 7.84454 9.34523 7.84454 8.80148C7.84454 8.0789 6.80054 6.43556 6.80054 5.79031C6.80054 5.30698 7.23312 5.03631 7.65845 5.03631C8.20945 5.03631 8.67345 5.58248 8.67345 5.58248L8.35445 5.9909V5.9909ZM8.23362 19.0409C8.23362 20.2468 9.31629 20.8679 10.167 20.8679C11.3125 20.8679 11.9239 20.1816 11.9239 19.2826C11.9239 18.7751 11.8296 18.4561 11.5952 17.9679L8.96829 12.5111C8.87887 12.325 8.84745 12.1075 8.84745 11.7909C8.84745 11.3027 9.32354 10.9016 9.82137 10.8895C10.2733 10.8798 10.7687 11.3124 10.7687 11.8078C10.7687 12.4096 10.4594 12.6754 10.138 12.6754C9.74404 12.6754 9.58695 12.5135 9.58695 12.2356C9.58695 12.0422 9.6812 11.9601 9.81412 11.9601C10.1525 11.9601 10.0582 12.4144 10.0582 12.4144C10.225 12.3781 10.3603 12.2066 10.2854 11.9915C10.4038 11.9673 10.5198 11.9021 10.6092 11.7981C10.5198 11.7111 10.4135 11.6435 10.2805 11.6193C10.3603 11.3583 10.254 11.2326 10.0268 11.1771C10.0727 11.2786 10.0727 11.3704 10.0582 11.4574C9.69812 11.3559 9.14712 11.5178 9.14712 12.1389C9.14712 12.7551 9.57487 13.2747 10.3796 13.1466C10.1863 13.2385 10.092 13.4246 10.0727 13.6324C10.2177 13.5768 10.3796 13.5696 10.3796 13.5696C10.2854 13.7339 10.1549 13.8765 10.1597 14.2027C10.3095 14.1351 10.4473 14.0094 10.6382 14.0891C10.3385 14.6788 10.7059 15.4884 11.6435 15.6817C11.3004 15.2781 11.1336 14.8456 11.1336 14.413C11.1336 13.0161 11.5251 12.7793 11.5251 11.8078C11.5251 11.4018 11.3149 10.962 10.9016 10.6623V10.6792C11.1723 10.6043 11.3487 10.469 11.4502 10.2853C10.8219 10.1113 9.91079 10.1137 9.42262 10.3071C8.86195 10.3699 8.46804 10.8001 8.35445 11.02C8.23845 11.2375 8.0137 12.0277 8.35445 12.7406C8.72662 13.5188 10.4811 17.2381 11.0273 18.4077C11.1409 18.6566 11.2134 18.9201 11.2134 19.2028C11.2134 19.9206 10.5585 20.1695 10.1863 20.1695C9.7392 20.1695 9.28487 19.8287 9.28487 19.4058C9.28487 19.1376 9.43229 18.9732 9.64012 18.9732C10.1452 18.9732 10.1138 19.401 10.0123 19.6716C10.324 19.5315 10.5077 19.2801 10.457 19.0143C10.6358 18.9901 10.805 18.9056 10.9596 18.7291C10.8364 18.5745 10.6865 18.4561 10.457 18.4536C10.5585 18.0428 10.283 17.8664 10.0123 17.7697C10.0969 18.0718 10.1525 18.4222 9.64012 18.4222C9.26554 18.4222 8.9707 18.4851 8.79912 18.7291C8.78704 18.4053 8.75562 17.1196 8.75562 17.1196C8.73629 16.6387 9.40087 16.6532 9.82379 16.7958C9.6667 16.2448 9.34045 15.9451 8.5792 16.0201C8.76529 15.9427 8.96104 15.7687 8.96104 15.4352C8.96104 14.9833 8.5937 14.4806 8.35445 14.3332L8.23362 19.0409V19.0409Z\" fill=\"#FFCC4D\" />\r\n        </svg>,\r\n        ru: <svg name=\"ru\" width=\"67\" height=\"27\" viewBox=\"0 0 82 62\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M82 52.4616C82 57.7292 77.9205 62 72.8889 62H9.11111C4.0795 62 0 57.7292 0 52.4616V42.9231H82V52.4616Z\" fill=\"#CE2028\" />\r\n            <path d=\"M0 19.0769H82V42.9231H0V19.0769Z\" fill=\"#22408C\" />\r\n            <path d=\"M72.8889 0H9.11111C4.0795 0 0 4.27085 0 9.53846V19.0769H82V9.53846C82 4.27085 77.9205 0 72.8889 0Z\" fill=\"#EEEEEE\" />\r\n        </svg>\r\n    };\r\n\r\n    const languages = {\r\n        ru: 'Русский язык',\r\n        kz: 'Қазақ тілі'\r\n    };\r\n\r\n    const [flag, setFlag] = useState(flags.kz);\r\n    const [language, setLanguage] = useState(languages.kz);\r\n    const [isActive, setActive] = useState(false);\r\n\r\n\r\n    const changeLang = (language)=>{\r\n        setLanguage(languages[language])\r\n        const myFlag = flag.props.name == 'kz' ? flags.ru : flags.kz;\r\n        setFlag(myFlag);\r\n        setActive(!isActive);\r\n        props.setLanguage(language)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const ref = useRef();\r\n\r\n    useOutsideOfClick(ref,()=>{\r\n        setActive(false);\r\n    });\r\n\r\n\r\n    const arrorName = cn('bi bi-caret-down',{\r\n        'arrow-language': isActive\r\n    })\r\n\r\n  \r\n\r\n\r\n\r\n    const languagesState = {\r\n        kz: isActive === false ? 'language hidden' : (language === languages.kz ? 'hidden' : 'language'),\r\n        ru: isActive === false ? 'language hidden' : (language === languages.ru ? 'hidden' : 'language'),\r\n    }\r\n\r\n    let width = window.innerWidth;\r\n\r\n    const arrow = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className={arrorName} viewBox=\"0 0 16 16\">\r\n    <path d=\"M10 12.796V3.204L4.519 8 10 12.796zm-.659.753l-5.48-4.796a1 1 0 0 1 0-1.506l5.48-4.796A1 1 0 0 1 11 3.204v9.592a1 1 0 0 1-1.659.753z\"/>\r\n  </svg>\r\n\r\n    return <ul ref={ref} class=\"list-group\" id=\"dropdown-menu-desktop\">\r\n        <div className=\"language\" onClick={() => setActive(!isActive)}><li className=\"list-group-item\" ><p className=\"languageAtText\">{language}</p> <span className=\"flag\">{flag}{arrow}</span></li></div>\r\n        <div className={languagesState.kz}><li className='list-group-item group-lang' onClick={(e) => changeLang('kz')}><p className=\"languageAtText\">Қазақ тілі</p>  <span className=\"flag\">{flags.kz}</span></li></div>\r\n        <div className={languagesState.ru}><li className='list-group-item group-lang' onClick={(e) => changeLang('ru')}><p className=\"languageAtText\">Русский язык </p><span className=\"flag\">{flags.ru}</span></li></div>\r\n    </ul>;    \r\n}\r\nexport default DropdownMenu;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\navbar\\useOutsideOfClick.js",[],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\navbar\\navItems\\navItems.js",["141","142"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport Link from 'react-router-dom/Link'\r\nimport './navItems.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction NavItems(props) {\r\n\r\n    const [pathName, setPathName] = useState(window.location.pathname);\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        return history.listen((location) => {\r\n            setPathName(location.pathname);\r\n        })\r\n    }, [history])\r\n\r\n    const { strings } = props;\r\n    const cards = {\r\n        home: {\r\n            title: 'Блог',\r\n            desc: strings.blogDesc,\r\n            isActive: pathName === '/blog' ? true : false,\r\n            icon: <i className={`bi bi-house-door ${pathName === '/blog' ? 'active-icon' : null}`}></i>,\r\n            src: '/blog'\r\n        },\r\n        calc: {\r\n            title: strings.calc,\r\n            desc: strings.calcDesc,\r\n            isActive: pathName === '/' ? true : false,\r\n            icon: <i className={`bi bi-calculator ${pathName === '/' ? 'active-icon' : null}`}></i>,\r\n            src: '/'\r\n        },\r\n        study: {\r\n            title: strings.studyTitle,\r\n            desc: strings.studyTitleDesc,\r\n            isActive: pathName === '/study' ? true : false,\r\n            icon: <i className={`bi bi-lightning ${pathName === '/study' ? 'active-icon' : null}`}></i>,\r\n            src: '/study'\r\n        },\r\n        test: {\r\n            title: strings.test,\r\n            desc: strings.testDesc,\r\n            isActive: pathName === '/test' ? true : false,\r\n            icon: <i className={`bi bi-check-square ${pathName === '/test' ? 'active-icon' : null}`}></i>,\r\n            src: '/test'\r\n\r\n        },\r\n        profs: {\r\n            title: strings.professions,\r\n            desc: strings.professionsDesc,\r\n            isActive: pathName === '/profs' ? true : false,\r\n            icon: <i className={`fas fa-user-graduate ${pathName === '/profs' ? 'active-icon' : null}`}></i>,\r\n            src: '/profs'\r\n\r\n        },\r\n        univers: {\r\n            title: strings.universities,\r\n            desc: strings.universitiesDesc,\r\n            isActive: pathName === '/univers' ? true : false,\r\n            icon: <i className={`fas fa-university ${pathName === '/univers' ? 'active-icon' : null}`}></i>,\r\n            src: '/univers'\r\n        },\r\n        univers: {\r\n            title: strings.about,\r\n            desc: strings.aboutDesc,\r\n            isActive: pathName === '/about' ? true : false,\r\n            icon: <i className={`bi bi-question-circle ${pathName === '/about' ? 'active-icon' : null}`}></i>,\r\n            src: '/about'\r\n        },\r\n        telegram: {\r\n            title: 'Telegram Bot',\r\n            isActive:  false,\r\n            icon: <i className={`bi bi-telegram`}></i>,\r\n            src: '/telegram'\r\n        },\r\n        github:{\r\n            title: 'Github',\r\n            isActive:  false,\r\n            icon: <i className={`bi bi-github`}></i>,\r\n            src: '/github'\r\n        }\r\n    }\r\n\r\n\r\n    const keys = Object.keys(cards);\r\n\r\n\r\n    return (\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n                {keys.map(key => {\r\n                    const card = cards[key];\r\n                    return <Link onClick={() => { props.setOutsideActive(false) }} to={card.src}>\r\n                        <li className=\"nav-item\">\r\n                            {card.icon}\r\n                            <a className={`nav-link ${card.isActive ? 'active-icon' : null}`} href=\"#\">{card.title}</a>\r\n                        </li>\r\n                    </Link>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavItems;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\component.js",["143"],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\footer\\footer.js",["144"],"import React, { useState,useEffect } from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport Link from 'react-router-dom/Link';\r\nimport './footer.css'\r\n\r\n\r\n\r\n\r\nfunction Footer(props) {\r\n  const [pathName,setPathName] = useState(window.location.pathname);\r\n  const history = useHistory();\r\n\r\n  \r\n  useEffect(() => {\r\n      return history.listen((location) => {\r\n          setPathName(location.pathname);\r\n      })\r\n  }, [history])\r\n\r\n  const { strings } = props;\r\n  const cards = {\r\n      home: {\r\n          title: 'Блог',\r\n          desc: strings.blogDesc,\r\n          isActive: pathName=== '/blog' ? true : false,\r\n          icon: <i className={`bi bi-house-door ${pathName=== '/blog' ? 'active-icon' : null}`}></i>,\r\n          src: '/blog'\r\n      },\r\n      calc: {\r\n          title: strings.calc,\r\n          desc: strings.calcDesc,\r\n          isActive: pathName === '/' ? true : false,\r\n          icon: <i className={`bi bi-calculator ${pathName === '/' ? 'active-icon' : null}`}></i>,\r\n          src: '/'\r\n      },\r\n      study: {\r\n          title: strings.studyTitle,\r\n          desc: strings.studyTitleDesc,\r\n          isActive: pathName === '/study' ? true : false,\r\n          icon: <i className={`bi bi-lightning ${pathName === '/study' ? 'active-icon' : null}`}></i>,\r\n          src: '/study'\r\n      },\r\n      test: {\r\n          title: strings.test,\r\n          desc: strings.testDesc,\r\n          isActive: pathName === '/test' ? true : false,\r\n          icon: <i className={`bi bi-check-square ${pathName === '/test' ? 'active-icon' : null}`}></i>,\r\n          src: '/test'\r\n\r\n      },\r\n      profs: {\r\n          title: strings.professions,\r\n          desc: strings.professionsDesc,\r\n          isActive: pathName === '/profs' ? true : false,\r\n          icon: <i className={`fas fa-user-graduate ${pathName === '/profs' ? 'active-icon' : null}`}></i>,\r\n          src: '/profs'\r\n\r\n      }\r\n  }\r\n\r\n  const keys = Object.keys(cards);\r\n  return (\r\n    <nav className=\"navbar-footer\">\r\n      <ul className=\"navbar-nav nav-footer-group\">\r\n        {keys.map(key => {\r\n          return <Link onClick={() => {}} to={cards[key].src}>\r\n            <li class=\"nav-item nav-footer-item\">\r\n              {cards[key].icon}\r\n              <a class=\"nav-link\" href=\"#\">{cards[key].title}</a>\r\n            </li>\r\n          </Link>\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Footer;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\inputScore\\inputScore.js",["145","146"],"import React, { useState, useEffect } from 'react';\r\nimport cn from 'classnames';\r\nimport './inputScore.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction InputScore(props) {\r\n    const {strings} = props;\r\n    const desktoInput = <div className=\"input-group mb-3 input-score-text\">\r\n        <input type=\"text\" onChange={(e) => { changeScore(e) }} className=\"form-control\" placeholder={strings.inputScoreText} aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n        <div className=\"input-group-append\">\r\n        </div>\r\n    </div>;\r\n\r\n    const mobInput = <div className=\"range-mobile\">\r\n        <h5>{props.score}</h5>\r\n        <input type=\"range\" className=\"form-range\" value={props.score} min=\"50\" max=\"140\" step=\"1\" id=\"customRange3\" onChange={(e) => { changeScore(e) }}></input>\r\n    </div>;\r\n\r\n    const changeScore = (e) => {\r\n        props.setScore(e.target.value)    \r\n    };\r\n\r\n    const inputScoreName = cn('input-score', {\r\n        'hide-input-score': props.hideInput\r\n    })\r\n    const isMob = window.innerWidth <= 768 ? true : false;\r\n    return (<div className={inputScoreName}>\r\n        <h3>{strings.inputScore}</h3>\r\n        {isMob ? mobInput : desktoInput}\r\n\r\n    </div>)\r\n\r\n}\r\nexport default InputScore;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\api\\sendSubjects.js",["147","148"],"import React, {useEffect} from 'react';\r\nimport cn from 'classnames';\r\nimport './senSubject.css';\r\n\r\nfunction checkToNumber(number) {\r\n    const num = number / 1;\r\n    if (isNaN(num) || !(num >= 50 && num <= 140)) return false;\r\n    return true;\r\n}\r\n\r\n\r\n\r\nfunction SendSubjects(props) {\r\n    \r\n\r\n\r\n    const toggle = ()=>{\r\n\r\n        if(checkToNumber(props.score)){\r\n            console.log(props.fullSubj)\r\n            props.setShowLast(true);\r\n            props.setHideInput(true);\r\n        } else {\r\n            props.setALert(true);\r\n        }\r\n    };\r\n\r\n    useEffect(async () => {\r\n        if (props.isAlert) {\r\n            setTimeout(() => {\r\n                props.setALert(false);\r\n            }, 3000);\r\n        }\r\n\r\n    }, [props.isAlert])\r\n\r\n\r\n\r\n\r\n    const name = cn('btn btn-success',{\r\n        'btn-success-hide': props.hideInput ? true : false\r\n    });\r\nreturn <button onClick={toggle} type=\"button\" className={name}>{props.strings.btnSuccess}</button>\r\n    \r\n}\r\n\r\nexport default SendSubjects;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\branchesAndPRofs\\brachesAndProfs.js",["149","150","151","152","153","154","155","156"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport profDB from './profDB';\r\nimport connect from './connect';\r\nimport useOutsideOfClick from '../../../navbar/useOutsideOfClick.js';\r\nimport cn from 'classnames';\r\nimport './brachesAndProfs.css';\r\n\r\nfunction BranchesAndProfs(props) {\r\n\r\n    const {strings} = props;\r\n    // for to server\r\n    const chosenArea = {\r\n        branch: {\r\n            name: 'branch',\r\n            desc:  strings.mainBranches\r\n        },\r\n        prof: {\r\n            name: 'prof',\r\n            desc: strings.mainProfs\r\n        }\r\n    };\r\n\r\n    //set Profs or Branches in db\r\n\r\n \r\n\r\n    //get elems of area\r\n    useEffect(() => {\r\n        const send = async () => {\r\n            if (props.branchOrProf.name === chosenArea.branch.name) {\r\n                const isSettedBool = await connect.setBranches(props.fullSubj);\r\n                alert(isSettedBool)\r\n                if(!isSettedBool) send()\r\n                props.setLoading(false);\r\n            } else {\r\n                props.setLoading(true);\r\n                const isSettedBool = await connect.setProfs(props.fullSubj);\r\n                if(!isSettedBool) send()\r\n                props.setLoading(false);\r\n            }\r\n        };\r\n        send();\r\n    }, [props.fullSubj, props.branchOrProf])\r\n\r\n\r\n    // for branches states \r\n    const [firstBranch, setFirstBranch] = useState('none');\r\n    const [secondBranch, setSecondBranch] = useState('none');\r\n    const [thirdBranch, setThirdBranch] = useState('none');\r\n    const [fourthBranch, setFourthBranch] = useState('none');\r\n    const elemsBranch = [firstBranch, secondBranch, thirdBranch, fourthBranch];\r\n    const setElemsBranch = [setFirstBranch, setSecondBranch, setThirdBranch, setFourthBranch];\r\n\r\n    const [branches, setBranches] = useState([]);\r\n\r\n\r\n    const [elemIndex, setElemIndex] = useState('none');\r\n\r\n    const queryForBranch = (elemIndex) => {\r\n        setElemIndex(elemIndex)\r\n        const dbFull = connect.getBranches();\r\n        profDB.setAllBranches(dbFull, props.score);\r\n        const branchesTemp = profDB.getAllBranches();\r\n        setBranches(branchesTemp);\r\n    }\r\n\r\n\r\n\r\n\r\n    // for animations of the list\r\n    const [toggle, setToggle] = useState(false);\r\n    const [hideFirst, setHideFirst] = useState(false);\r\n\r\n    const firstSwitch = cn('list-group subjects-list-area page-branches-profs', {\r\n        'ul-switch-next-area': toggle ? true : false,\r\n        'ul-switch-back-area': !toggle ? true : false,\r\n        'hide-first-area': hideFirst ? true : false,\r\n        'hide-scroll-area': !toggle ? true : false\r\n    });\r\n\r\n    const togglerNext = (i) => {\r\n        setToggle(!toggle);\r\n        setActiveIdFirst(i);\r\n        setTimeout(() => {\r\n            setHideFirst(true)\r\n        }, 1000);\r\n    };\r\n\r\n\r\n    const togglerBackBranch = (branch, i) => {\r\n        setToggle(!toggle);\r\n        setActiveIdSecond(i);\r\n        setActiveIdFirst(null);\r\n\r\n        setTimeout(() => {\r\n            setHideFirst(false)\r\n            setElemsBranch[elemIndex](branch);\r\n        }, 1000);\r\n    };\r\n\r\n    //   list\r\n\r\n    const [activeIdFirst, setActiveIdFirst] = useState();\r\n    const [activeIdSecond, setActiveIdSecond] = useState();\r\n\r\n\r\n\r\n    const [isFocus, setFocus] = useState(false);\r\n\r\n    const closeInAcive = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-circle\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n        <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n    </svg>;\r\n\r\n    const closeActive = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-circle-fill\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\" />\r\n    </svg>;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let firstBranches = () => {\r\n        let result = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const desc = elemsBranch[i] !== 'none' ? elemsBranch[i] : props.branchOrProf.desc;\r\n            const firstName = cn('list-group-item first-page-list', {\r\n                'active': activeIdFirst === i,\r\n                'disabled': props.isLoading\r\n            });\r\n\r\n\r\n            const button = <button data-key={i} key={Math.floor(Math.random(i) * 60)} onClick={(e) => { if (e.currentTarget.dataset.key == i) setElemsBranch[i]('none') }} type=\"button\" className=\"btn btn-outline-danger\">\r\n                {isFocus ? closeActive : closeInAcive}\r\n            </button>;\r\n\r\n            result.push(\r\n                <div className=\"first-page-list\">\r\n                    <li onClick={() => { togglerNext(i); queryForBranch(i); }} key={i} className={firstName}>\r\n                        <p>{desc}</p>\r\n                    </li>\r\n                    {elemsBranch[i] !== 'none' ? button : null}\r\n\r\n                </div>\r\n            );\r\n        }\r\n        return result;\r\n    };\r\n    firstBranches = firstBranches();\r\n\r\n    useEffect(() => {\r\n        setElemsBranch.forEach(setElem => {\r\n            setElem('none');\r\n        });\r\n        setElemsProfs.forEach(setElem => {\r\n            setElem('none')\r\n        })\r\n    }, [props.fullSubj])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const secondBranches = branches.map((branch, i) => {\r\n        const secondName = cn('list-group-item second-page-list', {\r\n            'active': activeIdSecond === i,\r\n            'disabled': props.isLoading\r\n        });\r\n\r\n        const list = <li onClick={(e) => { togglerBackBranch(branch, i) }} key={i} className={secondName}>{branch}</li>;\r\n        if (elemsBranch.includes(branch)) {\r\n            setTimeout(() => {\r\n                return null\r\n            }, 1000)\r\n        } else {\r\n            return list\r\n        }\r\n    });\r\n\r\n\r\n    const secondEmpty = <li onClick={() => {\r\n        setToggle(!toggle);\r\n        setTimeout(() => {\r\n            setHideFirst(false);\r\n            setActiveIdFirst(null);\r\n        }, 1000);\r\n    }} className='list-group-item second-page-list'>{props.branchOrProf.name !== chosenArea.branch.name ? strings.profsIsEmpty : strings.branchesIsEmpty}</li>;\r\n\r\n    const isEmpty = (second) => {\r\n        const emptyCheck = second.every(elem => elem === undefined);\r\n        return emptyCheck ? secondEmpty : second;\r\n    }\r\n\r\n\r\n\r\n\r\n    //for prof\r\n\r\n    // for profs states\r\n    const [firstProf, setFirstProf] = useState('none');\r\n    const [secondProf, setSecondProf] = useState('none');\r\n    const [thirdProf, setThirdProf] = useState('none');\r\n    const [fourthProf, setFourthProf] = useState('none');\r\n    const elemsProfs = [firstProf, secondProf, thirdProf, fourthProf];\r\n    const setElemsProfs = [setFirstProf, setSecondProf, setThirdProf, setFourthProf];\r\n\r\n    const [profs, setProfs] = useState([]);\r\n\r\n\r\n    const [fullProfsTemp, setFullProfs] = useState([])\r\n\r\n    const queryForProfs = (elemIndex) => {\r\n        setElemIndex(elemIndex)\r\n        const dbFull = connect.getProfs();\r\n        if(dbFull.length === 0) connect.getProfs();\r\n        profDB.setAllProfs(dbFull);\r\n        const profsTemp = profDB.getAllProfs();\r\n        setFullProfs(profsTemp);\r\n        setProfs(profsTemp);\r\n\r\n    }\r\n\r\n    const togglerBackProfs = (prof, i) => {\r\n        setToggle(!toggle);\r\n        setActiveIdSecond(i);\r\n        setActiveIdFirst(null);\r\n\r\n        setTimeout(() => {\r\n            setHideFirst(false)\r\n            setElemsProfs[elemIndex](prof);\r\n        }, 1000);\r\n    };\r\n\r\n\r\n\r\n    let firstProfs = () => {\r\n        let result = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const desc = elemsProfs[i].name !== undefined ? elemsProfs[i].name : props.branchOrProf.desc;\r\n            const firstName = cn('list-group-item first-page-list', {\r\n                'active': activeIdFirst === i,\r\n                'disabled': props.isLoading\r\n            });\r\n\r\n\r\n            const button = <button data-key={i} key={Math.floor(Math.random(i) * 60)} onClick={(e) => { if (e.currentTarget.dataset.key == i) setElemsProfs[i]('none') }} type=\"button\" className=\"btn btn-outline-danger\">\r\n                {isFocus ? closeActive : closeInAcive}\r\n            </button>;\r\n            result.push(<div className=\"first-page-list\">\r\n            <li onClick={() => { togglerNext(i); queryForProfs(i); }} key={i} className={firstName}>\r\n                <p>{desc}</p>\r\n            </li>\r\n            {elemsProfs[i] !== 'none' ? button : null}\r\n        </div>);\r\n\r\n            \r\n\r\n\r\n\r\n\r\n        }\r\n        return result;\r\n    }\r\n    firstProfs = firstProfs();\r\n\r\n\r\n    const secondProfs = profs.map((prof, i) => {\r\n        const secondName = cn('list-group-item second-page-list', {\r\n            'active': activeIdSecond === i,\r\n            'disabled': props.isLoading\r\n        });\r\n\r\n\r\n\r\n        const list = <li onClick={(e) => { togglerBackProfs(prof, i) }} key={i} className={secondName}>{`${prof.code}   ${prof.name}`}</li>;\r\n\r\n        const namesProfs = elemsProfs.map(prof => prof.name);\r\n\r\n        if (namesProfs.includes(prof.name)) {\r\n            setTimeout(() => {\r\n                return null\r\n            }, 1000)\r\n        } else {\r\n            return list\r\n        }\r\n    });\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const [hideSearch, setHideSearch] = useState(false);\r\n\r\n\r\n    const back = <svg id=\"search-input-icons\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\">\r\n        <path fill-rule=\"evenodd\" d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\" />\r\n    </svg>;\r\n\r\n\r\n\r\n\r\n\r\n    const close = <svg onClick={() => { setInputValue('') }} xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" id=\"clear-input-search\" className=\"bi bi-x\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n    </svg>\r\n\r\n    const changeValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const ref = useRef();\r\n\r\n    useOutsideOfClick(ref, () => {\r\n        setHideSearch(!hideSearch)\r\n    });\r\n\r\n    const inputCLick = () => {\r\n        if (!hideSearch) {\r\n            const inputClass = document.querySelector('.search-prof-input');\r\n            inputClass.focus();\r\n        }\r\n        setHideSearch(!hideSearch);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (inputValue !== '') {\r\n            const filtered = fullProfsTemp.filter((prof => {\r\n                const profStr = `${prof.code.toLowerCase()}   ${prof.name.toLowerCase()}`;\r\n                return profStr.includes(inputValue);\r\n            }));\r\n            setProfs(filtered);\r\n        } else {\r\n            setProfs(fullProfsTemp);\r\n        }\r\n\r\n    }, [inputValue])\r\n\r\n\r\n\r\n    const search = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n    </svg>\r\n\r\n    const input = <li className=\"list-group-item input-search-prof\">\r\n        <div className=\"input-group mb-3\" id=\"search-prof\">\r\n            <div onClick={inputCLick} className=\"input-group-prepend search-prof-icon\">\r\n                <span className=\"input-group-text search-prof-icon\">\r\n                    {hideSearch ? null : search}\r\n                    {hideSearch ? back : null}\r\n                </span>\r\n            </div>\r\n            <input ref={ref} onClick={() => { setHideSearch(!hideSearch) }} onChange={(e) => changeValue(e)} value={inputValue} type=\"text\" className=\"form-control search-prof-input\" aria-label=\"Amount (to the nearest dollar)\" />\r\n            {inputValue === '' ? null : close}\r\n\r\n        </div>\r\n    </li>\r\n\r\n\r\n\r\n\r\n\r\n    //get result\r\n    const getGrants = () => {\r\n        props.setIsResult(true);\r\n        props.setShowResult(true);\r\n        props.setHideBrAndPr(true);\r\n        console.log(elemsBranch);\r\n        if (props.branchOrProf.name === chosenArea.prof.name) {\r\n            //filter for undefined elems(for algorithm of sort)\r\n            const filteredProfs = elemsProfs.filter(prof => prof === 'none' ? false : true);\r\n            const res = profDB.getFiltredProfs(filteredProfs, props.score, props.qouta);\r\n            props.setGrantsProf(res);\r\n        } else {\r\n            //filter for undefined elems(for algorithm of sort)\r\n\r\n            const filteredBranches = elemsBranch.filter(branch => branch === 'none' ? false : true);\r\n            console.log(filteredBranches)\r\n            profDB.setProfsByBraches(elemsBranch, props.qouta);\r\n            const res = profDB.getProfsByBraches();\r\n            props.setAllGrantsBranch(res);\r\n        }\r\n    }\r\n\r\n    const changeArea = (area) => {\r\n        props.setBrOrPr(area);\r\n        props.setArea(area.name);\r\n        if (toggle === true) {\r\n            setToggle(false);\r\n            setHideFirst(false);\r\n        }\r\n    };\r\n\r\n    const buttonName = cn('btn btn-success btn-get-result', {\r\n        'disabled': toggle,\r\n        'hidden': props.hideBranchesAndProfs\r\n    });\r\n\r\n    const branchesAndProfs = cn('pages-branches-profs', {\r\n        'hidden': props.hideBranchesAndProfs\r\n    });\r\n\r\n    const buttonsArea = cn('btn btn-light', {\r\n        'hidden': props.hideBranchesAndProfs\r\n    });\r\n\r\n    const qoutaInput = cn('form-check-input', {\r\n        'hidden': props.hideBranchesAndProfs\r\n    });\r\n\r\n    const qoutaLabel = cn('form-check-label', {\r\n        'hidden': props.hideBranchesAndProfs\r\n    });\r\n\r\n\r\n    const spinner = <div className=\"spinner-parent\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n        </div>\r\n    </div>\r\n\r\n    const mainBranchesProfs = cn('main-branches-profs', {\r\n        'hidden': props.isChanged\r\n    })\r\n\r\n    return (\r\n        <div className={mainBranchesProfs}>\r\n\r\n    <button type=\"button\" className={buttonsArea} onClick={() => { changeArea(chosenArea.branch); }}>{strings.mainBranches}</button>\r\n    <button type=\"button\" className={buttonsArea} onClick={() => { changeArea(chosenArea.prof) }}>{strings.mainProfs}</button>\r\n            <div class=\"form-check\">\r\n                <input onClick={() => { props.setQouta(!props.qouta) }} className={qoutaInput} type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\r\n                <label className={qoutaLabel} for=\"flexCheckDefault\">\r\n                    {strings.formCheckLabel}\r\n                </label>\r\n            </div>\r\n            <div className={branchesAndProfs}>\r\n                {props.isLoading ? spinner : null}\r\n\r\n                <div className=\"main-pages-branches-profs\">\r\n                    <div className={firstSwitch}>\r\n                        <ul className=\"list-group list-area list-area-first\">\r\n                            {props.branchOrProf.name === 'branch' ? firstBranches : firstProfs}\r\n                        </ul>\r\n                    </div>\r\n                    <div className={firstSwitch}>\r\n                        <ul className=\"list-group list-area\">\r\n                            {props.branchOrProf.name === 'prof' ? input : null}\r\n                            {props.branchOrProf.name === chosenArea.branch.name ? isEmpty(secondBranches, branches, elemsBranch) : isEmpty(secondProfs, profs, elemsProfs)}\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n    <button type=\"button\" onClick={getGrants} className={buttonName}>{strings.btnGetResult}</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BranchesAndProfs;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\showResult\\showResult.js",["157"],"\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport cn from 'classnames';\r\nimport './showResult.css';\r\n\r\n\r\nlet counter = Math.floor(Math.random() * 10);\r\n\r\nfunction keyIter() {\r\n    counter = counter + 1;\r\n    return counter;\r\n}\r\nfunction ShowResult(props) {\r\n\r\n    const { allgrantsBranch, grantsProf, area } = props;\r\n    const grants = area === 'branch' ? allgrantsBranch : grantsProf;\r\n    const grantsKeys = Object.keys(grants);\r\n\r\n    const [pagesCount, setPagesCount] = useState(null);\r\n\r\n    function moreFour() {\r\n        let branchesList = () => {\r\n            const res = [];\r\n            const keys = Object.keys(grants);\r\n            const remainder = keys.length % 4;\r\n            if (remainder !== 0) {\r\n                const startOfEnd = keys.length - 4;\r\n                const end = keys.length;\r\n                for (let i = 0; i < end - remainder; i++) {\r\n                    res.push(grants[keys[i]]);\r\n                }\r\n                //for last elems \r\n                for (let i = startOfEnd; i < end; i++) {\r\n                    res.push(grants[keys[i]])\r\n                }\r\n            } else {\r\n                console.log(area)\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    res.push(grants[keys[i]]);\r\n                }\r\n            }\r\n\r\n            const listElems = [];\r\n            for (let i = 0; i < res.length; i = i + 4) {\r\n                const fourElems = [];\r\n                for (let j = i; j < i + 4; j++) {\r\n                    fourElems.push(res[j]);\r\n                }\r\n                listElems.push(fourElems)\r\n            }\r\n            return listElems\r\n        }\r\n        branchesList = branchesList();\r\n        console.log(branchesList)\r\n        if (pagesCount === null) {\r\n            setPagesCount(branchesList.length);\r\n        }\r\n\r\n        const lists = branchesList.map((page, i) => {\r\n            const grantsName = cn('grants-page', {\r\n                'show': pageIndex === i,\r\n                'hidden': pageIndex !== i\r\n            });\r\n            const listsPage = generateList(page);\r\n            const wrap = <div key={i} className={grantsName}>\r\n                <ul class=\"list-group grants-list-parent\">\r\n                    {listsPage}\r\n                </ul>\r\n            </div>;\r\n            return wrap;\r\n        });\r\n        return lists;\r\n    }\r\n\r\n\r\n\r\n    function getUniversList(elem, code) {\r\n\r\n        const checkKeep = { show: 'list-group-item subject-list-item list-grant-elem show-univer-animation', hide: 'list-group-item subject-list-item list-grant-elem hidden' };\r\n        let univerName;\r\n\r\n        if (keepUniver === code) {\r\n            univerName = checkKeep.show\r\n        } else {\r\n            univerName = checkKeep.hide;\r\n        }\r\n        return elem.univers.map(uni => {\r\n            let uniName;\r\n\r\n            if (uni.name === undefined) {\r\n                const key = Object.keys(uni)[0];\r\n                uniName = uni[key].name;\r\n            } else {\r\n                uniName = uni.name;\r\n            }\r\n            return <li key={keyIter()} className={univerName}>{uniName}</li>\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const toggleList = (code) => {\r\n        if (code === keepUniver) {\r\n            setKeepUniver('none');\r\n        } else {\r\n            setKeepUniver(code);\r\n        }\r\n    }\r\n\r\n\r\n    function arrowHide(arrowName) {\r\n        return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className={arrowName} viewBox=\"0 0 16 16\">\r\n            <path fill-rule=\"evenodd\" d=\"M6.776 1.553a.5.5 0 0 1 .671.223l3 6a.5.5 0 0 1 0 .448l-3 6a.5.5 0 1 1-.894-.448L9.44 8 6.553 2.224a.5.5 0 0 1 .223-.671z\" />\r\n        </svg>\r\n    }\r\n\r\n    function checkToUniverLength(elemUnivers,name){\r\n        console.log(name)\r\n        console.log(elemUnivers)\r\n        if(elemUnivers !== undefined){\r\n            if(elemUnivers.length === 0) return false;\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const [keepUniver, setKeepUniver] = useState('');\r\n    function generateList(elems) {\r\n        const lists = elems.map((elem, i) => {\r\n            const arrowName = cn('bi bi-chevron-compact-right', {\r\n                'arrow-spin': elem.code === keepUniver\r\n            })\r\n\r\n            const liHead = <li key={keyIter()} onClick={() => { toggleList(elem.code) }} className=\"list-group-item subject-list-item list-grant-elem\">\r\n                {checkToUniverLength(elem.univers,elem.name) ? arrowHide(arrowName) : null}\r\n\r\n                <p className=\"subject-desc-icon subject-desc\">{elem.name}</p>\r\n            </li>;\r\n\r\n\r\n            const ul = <ul class=\"list-group grants-list-ul\">\r\n                {liHead}\r\n                {checkToUniverLength(elem.univers,elem.name)  ? getUniversList(elem, elem.code) : null}\r\n            </ul>\r\n            return ul;\r\n        });\r\n        return lists;\r\n    }\r\n    function lessFour() {\r\n        const keys = Object.keys(grants);\r\n        const elemsLess = keys.map((key, i) => {\r\n            return grants[key];\r\n        });\r\n        const res = generateList(elemsLess);\r\n        const wrap = <div className=\"grants-list-parent\">\r\n            <ul class=\"list-group grants-list-ul grants-list-parent\">\r\n                {res}\r\n                {elemsLess.univers !== undefined ? getUniversList(elemsLess, elemsLess.code) : null}\r\n            </ul>\r\n        </div>;\r\n        return wrap;\r\n    }\r\n    const [pageIndex, setPage] = useState(0);\r\n\r\n    const [isProf, setIfProf] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.area === 'prof') {\r\n            setIfProf(true);\r\n            return;\r\n        }\r\n    }, [props.area])\r\n    const toggleNext = () => {\r\n        if (pagesCount === null) return null;\r\n        if (pagesCount !== pageIndex + 1) {\r\n            setPage(pageIndex + 1);\r\n        }\r\n    }\r\n\r\n    const toggleBack = () => {\r\n        if (pageIndex >= 1) {\r\n            setPage(pageIndex - 1);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const [isBackActive, setBackActive] = useState(false);\r\n    const [isNextActive, setNextActive] = useState(false);\r\n\r\n    const backIconInActive = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className={'bi bi-arrow-left-circle grants-arrow-icon'} viewBox=\"0 0 16 16\">\r\n        <path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.5-.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z\" />\r\n    </svg>;\r\n\r\n    const backIconActive = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-arrow-left-circle-fill\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z\" />\r\n    </svg>;\r\n\r\n    const backButton = <button onMouseOut={() => { setBackActive(false) }} onMouseOver={() => { setBackActive(true) }} onClick={toggleBack} type=\"button\" className=\"btn btn-primary\">\r\n        {isBackActive ? backIconActive : backIconInActive}\r\n        <span class=\"visually-hidden\">Button</span>\r\n    </button>;\r\n\r\n\r\n    const nextIconInActive = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-arrow-right-circle\" viewBox=\"0 0 16 16\">\r\n        <path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\" />\r\n    </svg>\r\n    const nextIconActive = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" class=\"bi bi-arrow-right-circle-fill\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\" />\r\n    </svg>\r\n\r\n    const nextButton = <button onMouseOut={() => { setNextActive(false) }} onMouseOver={() => { setNextActive(true) }} onClick={toggleNext} type=\"button\" className=\"btn btn-primary\">\r\n        {isNextActive ? nextIconActive : nextIconInActive}\r\n        <span class=\"visually-hidden\">Button</span>\r\n    </button>;\r\n\r\n\r\n\r\n\r\n\r\n    return <div className=\"main-grants-pages-headers\">\r\n\r\n        {isProf ? <h4>{props.strings.mainGrantsPagesHeaders}</h4> : <h3>{`Вариант ${pageIndex + 1}`}</h3>}\r\n        <div className=\"main-grants-parent\">\r\n            {(grantsKeys.length < 4 || isProf) ? null : backButton}\r\n            <div className=\"main-page-grants-list\">\r\n                <div className=\"elems-grants-list\">\r\n                    {grantsKeys.length > 4 ? moreFour() : null}\r\n                    {grantsKeys.length <= 4 ? lessFour() : null}\r\n                </div>\r\n            </div>\r\n            {(grantsKeys.length < 4 || isProf) ? null : nextButton}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default ShowResult;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\chosenSubjes\\chosenSubj.js",["158"],"import { useState } from 'react';\r\nimport cn from 'classnames';\r\nimport './chosenSubj.css';\r\n\r\nfunction ChosenSubjesAndScore(props) {\r\n\r\n    const name = cn('main-chosen-subjects-scores', {\r\n        'show-main-chosen-subjects-scores': props.hideSubjList,\r\n        'hide-main-chosen-subjects-scores': props.hideSubjList,\r\n        'hidden': props.isChanged\r\n    });\r\n\r\n    const toggleFirst = () => {\r\n        props.setTittleIndex(1);\r\n        props.setShowResult(false);\r\n        props.setChanged(true);\r\n        props.setHideSubjList(!props.hideSubjList);\r\n        props.setShow(true);\r\n        props.setToggle(false);\r\n        // props.setShowLast(false)\r\n        setTimeout(() => {\r\n            props.setHideFirst(false)\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    const toggleSecond = () => {\r\n        props.setTittleIndex(2);\r\n        props.setShowResult(false);\r\n        props.setChanged(true);\r\n        props.setHideSubjList(!props.hideSubjList);\r\n        props.setShow(true);\r\n        // props.setShowLast(false)\r\n\r\n    }\r\n\r\n    const backToInput = () => {\r\n        props.setHideInput(false);\r\n        props.setShowLast(false)\r\n    }\r\n\r\n    const inputName = cn('list-group-item chosen-scores chosen-list',{\r\n        'disabled': props.isResult\r\n    })\r\n    return <div className={name}>\r\n        <div className=\"chosen-subjects\">\r\n<h5 className=\"chosen-desc\">{props.strings.chosenDesc}</h5>\r\n            <ul className=\"list-group chosen-subjects-scores\" id=\"chosen-subjects-list\">\r\n                <li className=\"list-group-item chosen-subjects chosen-list\" onClick={toggleFirst}>\r\n                    <img className=\"subject-icon\" src={props.firstSubj.icon} alt=\"\" />\r\n                    <p className=\"subject-desc\">{props.firstSubj.name}</p>\r\n                </li>\r\n                <li class=\"list-group-item chosen-subjects chosen-list\" onClick={toggleSecond}>\r\n                    <img className=\"subject-icon\" src={props.secondSubj.icon} alt=\"\" />\r\n                    <p className=\"subject-desc\">{props.secondSubj.name}</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <div className=\"chosen-score\">\r\n            <h5 className=\"chosen-desc-score\">{props.strings.chosenDescScore}</h5>\r\n            <ul className=\"list-group chosen-subjects-scores\">\r\n                <li className={inputName} onClick={backToInput}>\r\n                    <p className=\"subject-desc\">{props.score}</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ChosenSubjesAndScore;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\subjectsList\\subjects.js",["159","160"],"import React, { useState, useEffect } from 'react';\r\nimport cn from 'classnames';\r\nimport './subjects.css';\r\nimport subjAllFunction from './subjectsList.js';\r\n\r\nfunction Subjects(props) {\r\n\r\n    const {strings} = props;\r\n    const subjAll = subjAllFunction(strings.getLanguage());\r\n    const firstSwitch = cn('list-group subjects-list', {\r\n        'ul-switch-next': props.toggle ? true : false,\r\n        'ul-switch-back': !props.toggle ? true : false,\r\n        'hide-first': props.hideFirst ? true : false,\r\n    });\r\n\r\n    const keysSubjAll = Object.keys(subjAll);\r\n    const [firstSubj, setFirstSujb] = useState('none');\r\n    const [secondSubject, setSecondSubj] = useState('none');\r\n    const chosenAndNot = {\r\n        notChosen: \"list-group-item subject-list-item\",\r\n        chosen: \"active list-group-item subject-list-item\"\r\n    };\r\n    let firstSubjects = keysSubjAll.map((key, i) => {\r\n        const chosenOrNot = subjAll[key].short === firstSubj ? chosenAndNot.chosen : chosenAndNot.notChosen;\r\n        return (<li onClick={() => { togglerNext(subjAll[key]) }} key={i} className={chosenOrNot}>\r\n            <img className=\"subject-desc-icon subject-icon\" src={subjAll[key].icon} alt={subjAll[key].name} />\r\n            <p className=\"subject-desc-icon subject-desc\" >{subjAll[key].name}</p>\r\n        </li>)\r\n    });\r\n\r\n    let filtred = () => {\r\n        if (firstSubj === 'none') return null;\r\n        return keysSubjAll.map((key, i) => {\r\n            const chosenOrNot = subjAll[key].short === secondSubject ? chosenAndNot.chosen : chosenAndNot.notChosen;\r\n            const li = <li onClick={() => { togglerToRes(subjAll[key]) }} key={i} className={chosenOrNot}>\r\n                <img className=\"subject-desc-icon subject-icon\" src={subjAll[key].icon} alt={subjAll[key].name} />\r\n                <p className=\"subject-desc-icon subject-desc\" >{subjAll[key].name}</p>\r\n            </li>;\r\n            if (subjAll[key].share.includes(firstSubj)) {\r\n                return li;\r\n            }\r\n        });\r\n    };\r\n    filtred = filtred();\r\n\r\n\r\n\r\n\r\n    const togglerNext = (target) => {\r\n        const elem = document.querySelector('.subject-slider');\r\n        if (elem) {\r\n            elem.scrollTo(0,0);\r\n            if(window.innerWidth <= 768) {\r\n                elem.scrollTop = `0px`;\r\n            }\r\n        }\r\n        props.setTittleIndex(2);\r\n        props.setToggle(!props.toggle);\r\n        setFirstSujb(target.short);\r\n        props.changeHeight(false);\r\n        props.setFirstSujb({\r\n            name: target.name,\r\n            icon: target.icon\r\n        });\r\n        setTimeout(() => {\r\n            props.setHideFirst(true)\r\n        }, 1000);\r\n    };\r\n\r\n    const togglerBack = () => {\r\n        props.setTittleIndex(1);\r\n        props.setToggle(!props.toggle);\r\n        setTimeout(() => {\r\n            props.setHideFirst(false)\r\n        }, 1000);\r\n\r\n    };\r\n    useEffect(() => {\r\n        props.setFullSubj({\r\n            full: firstSubj + secondSubject,\r\n            reversed: secondSubject + firstSubj\r\n        });\r\n    }, [secondSubject]);\r\n\r\n\r\n\r\n\r\n\r\n    const listName = cn(\"subjects-list-buttons\", {\r\n        \"subjects-list-hide\": props.hideSubjList,\r\n    });\r\n\r\n    const togglerToRes = (target) => {\r\n        if (props.isChanged) {\r\n            props.setShowLast(true)\r\n            props.setChanged(!props.isChanged)\r\n        }\r\n        props.setHideFooterChild(false)\r\n        props.setTittleIndex(null)\r\n        props.setIsResult(false);\r\n        props.setLoading(true);\r\n        setSecondSubj(target.short);\r\n        props.setHideSubjList(true)\r\n        props.setInputScoreShow(true);\r\n        props.setHideBrAndPr(false);\r\n        props.setShowResult(false);\r\n\r\n        props.setSecondSubj({\r\n            name: target.name,\r\n            icon: target.icon\r\n        });\r\n        props.setShow(false);\r\n    };\r\n\r\n\r\n\r\n    const backButton = <svg onClick={togglerBack} xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\">\r\n        <path fill-rule=\"evenodd\" d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\" />\r\n    </svg>;\r\n\r\nconst tittleDescription = props.tittleIndex === 1 ? <h5>{strings.backButtonSubjectIndexFirst}</h5> : props.tittleIndex === 2 ? <h5>{strings.backButtonSubjectIndexSecond}</h5> : null;\r\n    return (\r\n        <div className={listName}>\r\n            <div className=\"back-button-subject-index\">\r\n                {props.toggle ? backButton : null}\r\n                {props.tittleIndex !== null ? tittleDescription : null}\r\n            </div>\r\n            <div className=\"subject-slider\">\r\n                <div className=\"subjects-first-second\">\r\n                    <ul className={firstSwitch}>\r\n                        {firstSubjects}\r\n                    </ul>\r\n                    <ul className={firstSwitch + ' second-subjects-filtered'}>\r\n                        {filtred}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Subjects;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\branchesAndPRofs\\profDB.js",["161"],"\r\nclass ProfDB {\r\n    constructor() {\r\n        this.branches = [];\r\n        this.profs = [];\r\n        this.profsByBranches = [];\r\n        this.subj = '';\r\n        this.score = 95;\r\n        this.db = {};\r\n    }\r\n\r\n    setAllBranches(dbFull, score) {\r\n        let db = Object.keys(dbFull)[1];\r\n        db = dbFull[db];\r\n        this.db = db;\r\n        this.branches = Object.keys(db);\r\n        this.score = score;\r\n    }\r\n\r\n    getAllBranches() {\r\n        return this.branches; //Object DB by subject\r\n    }\r\n\r\n    setSubject(subjects){\r\n        const subjectsList =  [\"ГеоБио\", \"Творч\", \"ФизМат\", \"БиоХим\", \"ГеоИст\", \"КазКЛит\", \"РусРЛит\", \r\n                                \"ИноИст\", \"КазЛит/РусЛит\", \"МатГео\", \"ИстЧоп\", \"ФизХим\", \"ГеоИно\"];\r\n        this.subj =  subjectsList.includes(subjects.full) ? subjects.full : subjects.reversed;\r\n    }\r\n\r\n\r\n    setProfsByBraches(chosenBranches, isQouta) {\r\n        \r\n        const res = chosenBranches.reduce((acc, branch, i) => {\r\n            for (const codeIn in this.db[branch]) {\r\n                const qoutaOrMin = isQouta ? 'minWithQuota' : 'min';\r\n                for (const code in this.db[branch]) {\r\n                    if (this.db[branch][code].quotes.length !== 0) {\r\n                        for (const univerIn in this.db[branch][code].quotes) {\r\n                            const key = Object.keys(this.db[branch][code].quotes[univerIn])[0];\r\n                            const univer = this.db[branch][code].quotes[univerIn][key];\r\n                            univer.name = univer.name.replace('[dot]','.')\r\n                            if (Number(univer[qoutaOrMin]) <= this.score) {\r\n                                if (acc[code] !== undefined) {\r\n                                    acc[code].univers.push(univer);\r\n                                } else {\r\n                                    acc[code] = {\r\n                                        code: this.db[branch][code].code,\r\n                                        name: this.db[branch][code].name,\r\n                                        minScores: [univer.min],\r\n                                        minScoresWithQouta: [univer.minWithQuota],\r\n                                        univers: [univer]\r\n                                    };\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (Number(this.db[branch][code][qoutaOrMin]) <= Number(this.score)) {\r\n                            acc[this.db[branch][code].code] = {\r\n                                code: this.db[branch][code].code,\r\n                                name: this.db[branch][code].name,\r\n                                min: this.db[branch][code].min,\r\n                                minWithQuota: this.db[branch][code].minWithQuota\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return acc;\r\n\r\n        }, {});\r\n        this.profsByBranches = res;\r\n    }\r\n\r\n\r\n    getProfsByBraches() {\r\n        return this.profsByBranches;\r\n    }\r\n\r\n  \r\n\r\n\r\n    setAllProfs(dbFull) {\r\n        \r\n        this.profs = dbFull;\r\n\r\n        \r\n    }\r\n\r\n    getAllProfs() {\r\n        return this.profs;\r\n    }\r\n\r\n    getFiltredProfs(chosenProfs, score, isQouta) {\r\n        \r\n        return chosenProfs.reduce((acc, prof) => {\r\n            if(prof === undefined) return acc;\r\n            const minScoreKey = isQouta ? 'minWithQuota' : 'min';\r\n            if (prof.quotes.length !== 0) {\r\n                const univers = prof.quotes;\r\n                univers.forEach(univer => {\r\n                    const key = Object.keys(univer)[0];\r\n                    const minScore = univer[key][minScoreKey];\r\n                    if (Number(minScore) <= score) {\r\n                        if(acc.length === 0 || acc[acc.length-1].code !== prof.code){\r\n                            const res = {\r\n                                code: prof.code,\r\n                                name: prof.name,\r\n                                min: [],\r\n                                minWithQuota: [],\r\n                                univers: []\r\n                            };\r\n                            const key = Object.keys(univer)[0];\r\n                            univer[key].name = univer[key].name.replace('[dot]','.');\r\n                            res.univers.push(univer)\r\n                            acc = [...acc, res]\r\n                        } else {\r\n                            acc[acc.length-1].min.push(univer[key].min);\r\n                            acc[acc.length-1].minWithQuota.push(univer[key].minWithQuota);\r\n                            acc[acc.length-1].univers.push(univer);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                if(Number(prof[minScoreKey]) <= score){\r\n                    const res = {\r\n                        code: prof.code,\r\n                        name: prof.name,\r\n                        min: prof.min,\r\n                        minWithQuota: prof.minWithQuota,\r\n                        univers: []\r\n                    };\r\n                    acc = [...acc,res];\r\n                }\r\n            }\r\n            return acc;\r\n        }, [])\r\n       \r\n    }\r\n\r\n\r\n}\r\nexport default new ProfDB();","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\branchesAndPRofs\\connect.js",[],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\subjectsList\\subjectsList.js",[],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\about\\about.js",["162"],"import React, { useState} from 'react';\r\nimport Link from 'react-router-dom/Link';\r\nimport cn from 'classnames';\r\nimport './about.css';\r\nimport vector from './vector-creator.png'\r\nfunction About(props) {\r\n\r\n    const {strings} = props\r\n    const titleBody = <div className=\"about-title-body\">\r\n        <img src={vector} alt=\"\" />\r\n        <h1>Сіздің грантқа түсуіңізге көмектесеміз</h1>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    const cards = {\r\n        home: {\r\n            title: 'Блог',\r\n            desc: strings.blogDesc,\r\n            icon: <i class=\"bi bi-house-door\"></i>,\r\n            src: '/blog'\r\n        },\r\n        calc: {\r\n            title: strings.calc,\r\n            desc: strings.calcDesc,\r\n            icon: <i class=\"bi bi-calculator\"></i>,\r\n            src: '/'\r\n        },\r\n        study: {\r\n            title: strings.studyTitle,\r\n            desc: strings.studyTitleDesc,\r\n            icon: <i class=\"bi bi-lightning\"></i>,\r\n            src: '/study'\r\n        },\r\n        test: {\r\n            title: strings.test,\r\n            desc: strings.testDesc,\r\n            icon: <i class=\"bi bi-check-square\"></i>,\r\n            src: '/'\r\n\r\n        },\r\n        profs: {\r\n            title: strings.professions,\r\n            desc: strings.professionsDesc,\r\n            icon: <i class=\"fas fa-user-graduate\"></i>,\r\n            src: '/'\r\n\r\n        },\r\n        univers: {\r\n            title: strings.universities,\r\n            desc: strings.universitiesDesc,\r\n            icon: <i class=\"fas fa-university\"></i>,\r\n            src: '/'\r\n\r\n        }\r\n    };\r\n    const [hoverElem, setHoverElem] = useState('none');\r\n\r\n    const keys = Object.keys(cards)\r\n    const ul = <ul className=\"about-card-group\">\r\n        {keys.map((key, i) => {\r\n            const card = cards[key];\r\n\r\n            const cardName = cn('card', {\r\n                'card-hover-active': hoverElem === i\r\n            });\r\n\r\n            const cardConst = <li className='about-card-item' key={i} onMouseOut={() => { setHoverElem('none') }} onMouseOver={() => { setHoverElem(i) }}>\r\n                    <Link to={card.src}>\r\n                    <div className={cardName} style={{ width: \"18rem\" }}>\r\n                        <div className=\"card-body card-body-title\" >\r\n                            <span className=\"about-card-title\">\r\n                                {card.icon}\r\n                                <h5>{card.title}</h5>\r\n                            </span>\r\n                            <p className=\"card-text\">{card.desc}</p>\r\n        <a href=\"#\" className=\"btn btn-primary about-button-font\">{card.title}</a>\r\n                        </div>\r\n                    </div>\r\n                    </Link>\r\n            </li>\r\n            return cardConst\r\n        })}\r\n    </ul>;\r\n\r\n\r\n\r\n\r\n\r\n    return <div className=\"about-page\">\r\n        {titleBody}\r\n        {ul}\r\n    </div>\r\n}\r\n\r\nexport default About;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\main.js",["163"],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\calc\\calc.js",["164","165","166"],"import React, { useState, useEffect } from 'react';\r\n// import Subjects from '../subjectsList/subjects';\r\nimport Subjects from './subjectsList/subjects.js';\r\nimport InputScore from './inputScore/inputScore.js';\r\nimport SendSubjects from './api/sendSubjects.js';\r\nimport ChosenSubjesAndScore from './chosenSubjes/chosenSubj.js';\r\nimport BranchesAndProfs from './branchesAndPRofs/brachesAndProfs.js';\r\nimport ShowResult from './showResult/showResult.js';\r\nimport connect from './branchesAndPRofs/connect.js'\r\nimport cn from 'classnames';\r\nimport './calc.css';\r\nfunction Calc(props) {\r\n    const { strings } = props;\r\n    const [isActive, setActive] = useState(false);\r\n    const [isFullHeight, setFullHeight] = useState(true);\r\n\r\n    const [countCalc, setCount] = useState(0);\r\n\r\n    const [inputScoreShow, setInputScoreShow] = useState(false);\r\n\r\n    const [fullSubj, setFullSubj] = useState('none');\r\n    const [score, setScore] = useState(95);\r\n\r\n    const [firstSubj, setFirstSujb] = useState('none');\r\n    const [secondSubj, setSecondSubj] = useState('none');\r\n\r\n    const [hideSubjList, setHideSubjList] = useState(false);\r\n    const [toShow, setShow] = useState(false);\r\n    const [toggle, setToggle] = useState(false);\r\n    const [hideFirst, setHideFirst] = useState(false);\r\n\r\n\r\n    const [hideHeader, setHideHeader] = useState(false);\r\n\r\n    const [hideFooter, setHideFooterChild] = useState(false);\r\n\r\n    useEffect(() => {\r\n        hideFooter ? props.setHideFooter(true) : props.setHideFooter(false);\r\n    }, [hideFooter])\r\n\r\n\r\n\r\n    const buttonToggle = () => {\r\n        setHideFooterChild(true)\r\n        setHideHeader(true);\r\n        setActive(true);\r\n        setShow(true);\r\n        setCount(countCalc + 1);\r\n    }\r\n\r\n    const name = cn('main-list', {\r\n        'show': toShow ? true : false,\r\n        'full-height': isFullHeight ? true : false\r\n    });\r\n\r\n    // const [result, setResult] = useState('none');\r\n    const [hideBranchesAndProfs, setHideBrAndPr] = useState(false);\r\n    const [isShowResult, setShowResult] = useState(false);\r\n\r\n\r\n    const chosenArea = {\r\n        branch: {\r\n            name: 'branch',\r\n            desc: strings.mainBranches\r\n        },\r\n        prof: {\r\n            name: 'prof',\r\n            desc: strings.mainProfs\r\n        }\r\n    };\r\n\r\n    const [branchOrProf, setBrOrPr] = useState(chosenArea.branch);\r\n\r\n\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n\r\n    const [isResult, setIsResult] = useState(false);\r\n\r\n    const [tittleIndex, setTittleIndex] = useState(1);\r\n\r\n    const [showLast, setShowLast] = useState(false);\r\n\r\n\r\n    const [isChanged, setChanged] = useState(false);\r\n\r\n    const listSubject = <div className={name}>\r\n        <Subjects strings={strings} setIsResult={setIsResult} changeHeight={setFullHeight} countCalc={countCalc}\r\n            setCount={setCount} setInputScoreShow={setInputScoreShow}\r\n            setFullSubj={setFullSubj} fullSubj={fullSubj}\r\n            setFirstSujb={setFirstSujb}\r\n            hideSubjList={hideSubjList} setHideSubjList={setHideSubjList}\r\n            setSecondSubj={setSecondSubj} setShow={setShow}\r\n            toggle={toggle} setToggle={setToggle}\r\n            hideFirst={hideFirst} setHideFirst={setHideFirst}\r\n            setHideBrAndPr={setHideBrAndPr} setShowResult={setShowResult}\r\n            branchOrProf={branchOrProf} setBrOrPr={setBrOrPr}\r\n            setLoading={setLoading} isLoading={isLoading}\r\n            tittleIndex={tittleIndex} setTittleIndex={setTittleIndex}\r\n            isFullHeight={isFullHeight} setShowLast={setShowLast}\r\n            isChanged={isChanged} setChanged={setChanged}\r\n            setHideFooterChild={setHideFooterChild} />\r\n    </div>;\r\n    const startButton = <button onClick={buttonToggle} type=\"button\" className=\"btn btn-outline-primary\">{strings.chosenSubjectsInputBranchesSubjects}</button>;\r\n\r\n\r\n    const [hideInput, setHideInput] = useState(false);\r\n\r\n\r\n    const [qouta, setQouta] = useState(false);\r\n\r\n    //for area of result\r\n\r\n    const [area, setArea] = useState('branch');\r\n    //result for Branch\r\n    const [allgrantsBranch, setAllGrantsBranch] = useState([]);\r\n\r\n\r\n\r\n    //result for prof\r\n    const [grantsProf, setGrantsProf] = useState([]);\r\n\r\n\r\n    const description = <div className=\"main-header\">\r\n        <div className=\"main-header-tittle\">\r\n            <h2>\r\n                {strings.mainHeaderTittle}\r\n            </h2>\r\n        </div>\r\n        <div className=\"main-header-descriptio\">\r\n            <h4>\r\n                {strings.mainHeaderDescriptio}\r\n            </h4>\r\n        </div>\r\n    </div>\r\n\r\n    //save in local storage\r\n\r\n    useEffect(() => {\r\n        if (secondSubj !== 'none') {\r\n            localStorage.setItem('firstSubj', JSON.stringify(firstSubj));\r\n            localStorage.setItem('secondSubj', JSON.stringify(secondSubj));\r\n            localStorage.setItem('score', JSON.stringify(score));\r\n        }\r\n    }, [secondSubj, score]);\r\n\r\n\r\n\r\n    //check to subjects in localStorage\r\n\r\n    // useEffect(() => {\r\n    //     if (localStorage.getItem('firstSubj') !== null) {\r\n    //         setHideFooterChild(true)\r\n    //         setHideHeader(true);\r\n    //         setActive(true);\r\n    //         setShow(true);\r\n    //         setCount(countCalc + 1);\r\n    //         const first = JSON.parse(localStorage.getItem('firstSubj'));\r\n    //         const second = JSON.parse(localStorage.getItem('secondSubj'));\r\n            \r\n    //         setFirstSujb(first);\r\n    //         setSecondSubj(second);\r\n    //         setFullSubj({\r\n    //             full: first + second,\r\n    //             reversed: second + first\r\n    //         });\r\n    //         const send = async () => {\r\n    //             if (branchOrProf.name === chosenArea.branch.name) {\r\n    //                 await connect.setBranches({\r\n    //                     full: first + second,\r\n    //                     reversed: second + first\r\n    //                 });\r\n    //                 setLoading(false)\r\n    //                 const elems = connect.getBranches();\r\n    //                 console.log(elems)\r\n    \r\n    //             } else {\r\n    //                 setLoading(true);\r\n    //                 await connect.setProfs({\r\n    //                     full: first + second,\r\n    //                     reversed: second + first\r\n    //                 });\r\n    //                 setLoading(false);\r\n    //                 const elems = connect.getProfs();\r\n    //                 console.log(elems)\r\n    //             }\r\n    //         };\r\n    //         send();\r\n\r\n    //         console.log(connect.getBranches())\r\n            \r\n    //         setHideFooterChild(false)\r\n    //         setTittleIndex(null)\r\n    //         setIsResult(false);\r\n    //         setLoading(true);\r\n    //         setHideSubjList(true)\r\n    //         setInputScoreShow(true);\r\n    //         setHideBrAndPr(false);\r\n    //         setShowResult(false);\r\n    //         setShowLast(true);\r\n    //         setHideInput(true);\r\n    //     }\r\n    // }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"main-calc-wrap\">\r\n            <div className=\"main-calc\">\r\n                {hideHeader ? null : description}\r\n                {isActive ? listSubject : null}\r\n                {inputScoreShow ? <InputScore strings={strings} score={score} setScore={setScore} hideInput={hideInput} /> : null}\r\n                {inputScoreShow ? <SendSubjects strings={strings} isAlert={props.isAlert} setALert={props.setALert}\r\n                    hideAnim={props.hideAnim} setHideAnim={props.setHideAnim}\r\n                    fullSubj={fullSubj} score={score} setShowLast={setShowLast}\r\n                    hideInput={hideInput} setHideInput={setHideInput} /> : null}\r\n                <div className=\"chosenSubjects-input-branches-subjects\">\r\n                    {showLast ? <ChosenSubjesAndScore strings={strings} setTittleIndex={setTittleIndex} setShowResult={setShowResult} isChanged={isChanged} setChanged={setChanged} setShowLast={setShowLast} isResult={isResult} firstSubj={firstSubj} secondSubj={secondSubj}\r\n                        score={score} hideSubjList={hideSubjList} setHideSubjList={setHideSubjList}\r\n                        setShow={setShow} setToggle={setToggle}\r\n                        hideFirst={hideFirst} setHideFirst={setHideFirst}\r\n                        setHideInput={setHideInput} setFirstSujb={setFirstSujb} /> : null}\r\n                    {!hideHeader ? startButton : null}\r\n                    {showLast ? <BranchesAndProfs strings={strings} isChanged={isChanged} setIsResult={setIsResult} setLoading={setLoading} isLoading={isLoading} branchOrProf={branchOrProf} setBrOrPr={setBrOrPr} fullSubj={fullSubj} setGrantsProf={setGrantsProf} hideBranchesAndProfs={hideBranchesAndProfs} setHideBrAndPr={setHideBrAndPr}\r\n                        setArea={setArea} setShowResult={setShowResult} setAllGrantsBranch={setAllGrantsBranch}\r\n                        score={score} qouta={qouta} setQouta={setQouta} /> : null}\r\n                </div>\r\n                {isShowResult ? <ShowResult strings={strings} area={area} allgrantsBranch={allgrantsBranch} grantsProf={grantsProf} /> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Calc;","C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\blog\\blog.js",["167","168","169","170","171"],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\blog\\blogApi.js",[],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\cardPost\\cardPost.js",["172","173","174","175"],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\study\\study.js",[],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\test\\test.js",[],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\profs\\profs.js",[],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\univers\\univers.js",[],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\error\\error.js",[],"C:\\OPEN-SERVER\\OSPanel\\domains\\oqy\\src\\components\\main\\bodyTranslate.js",["176"],{"ruleId":"177","severity":1,"message":"178","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":24},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":30,"column":13,"nodeType":"187","endLine":30,"endColumn":50},{"ruleId":"177","severity":1,"message":"188","line":1,"column":35,"nodeType":"179","messageId":"180","endLine":1,"endColumn":44},{"ruleId":"189","severity":1,"message":"190","line":43,"column":40,"nodeType":"191","messageId":"192","endLine":43,"endColumn":42},{"ruleId":"177","severity":1,"message":"193","line":75,"column":9,"nodeType":"179","messageId":"180","endLine":75,"endColumn":14},{"ruleId":"194","severity":1,"message":"195","line":71,"column":9,"nodeType":"196","messageId":"192","endLine":71,"endColumn":16},{"ruleId":"185","severity":1,"message":"186","line":104,"column":29,"nodeType":"187","endLine":104,"endColumn":104},{"ruleId":"197","severity":1,"message":"198","line":117,"column":7,"nodeType":"199","endLine":117,"endColumn":17,"suggestions":"200"},{"ruleId":"185","severity":1,"message":"186","line":69,"column":15,"nodeType":"187","endLine":69,"endColumn":44},{"ruleId":"177","severity":1,"message":"201","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"188","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"202","line":28,"column":15,"nodeType":"203","endLine":35,"endColumn":6},{"ruleId":"197","severity":1,"message":"204","line":35,"column":8,"nodeType":"199","endLine":35,"endColumn":23,"suggestions":"205"},{"ruleId":"197","severity":1,"message":"206","line":43,"column":8,"nodeType":"199","endLine":43,"endColumn":44,"suggestions":"207"},{"ruleId":"177","severity":1,"message":"208","line":108,"column":21,"nodeType":"179","messageId":"180","endLine":108,"endColumn":29},{"ruleId":"189","severity":1,"message":"190","line":136,"column":137,"nodeType":"191","messageId":"192","endLine":136,"endColumn":139},{"ruleId":"197","severity":1,"message":"209","line":161,"column":8,"nodeType":"199","endLine":161,"endColumn":24,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":169,"column":53,"nodeType":"203","messageId":"213","endLine":169,"endColumn":55},{"ruleId":"189","severity":1,"message":"190","line":251,"column":137,"nodeType":"191","messageId":"192","endLine":251,"endColumn":139},{"ruleId":"211","severity":1,"message":"212","line":272,"column":45,"nodeType":"203","messageId":"213","endLine":272,"endColumn":47},{"ruleId":"197","severity":1,"message":"214","line":340,"column":8,"nodeType":"199","endLine":340,"endColumn":20,"suggestions":"215"},{"ruleId":"177","severity":1,"message":"216","line":5,"column":38,"nodeType":"179","messageId":"180","endLine":5,"endColumn":44},{"ruleId":"177","severity":1,"message":"201","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":18},{"ruleId":"211","severity":1,"message":"212","line":33,"column":41,"nodeType":"203","messageId":"213","endLine":33,"endColumn":43},{"ruleId":"197","severity":1,"message":"217","line":83,"column":8,"nodeType":"199","endLine":83,"endColumn":23,"suggestions":"218"},{"ruleId":"177","severity":1,"message":"219","line":34,"column":24,"nodeType":"179","messageId":"180","endLine":34,"endColumn":30},{"ruleId":"185","severity":1,"message":"186","line":78,"column":9,"nodeType":"187","endLine":78,"endColumn":67},{"ruleId":"177","severity":1,"message":"201","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"220","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":15},{"ruleId":"197","severity":1,"message":"204","line":39,"column":8,"nodeType":"199","endLine":39,"endColumn":20,"suggestions":"221"},{"ruleId":"197","severity":1,"message":"222","line":145,"column":8,"nodeType":"199","endLine":145,"endColumn":27,"suggestions":"223"},{"ruleId":"177","severity":1,"message":"224","line":18,"column":13,"nodeType":"179","messageId":"180","endLine":18,"endColumn":20},{"ruleId":"197","severity":1,"message":"225","line":47,"column":8,"nodeType":"199","endLine":47,"endColumn":15,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":75,"column":21,"nodeType":"187","endLine":75,"endColumn":88},{"ruleId":"185","severity":1,"message":"186","line":85,"column":25,"nodeType":"187","endLine":85,"endColumn":55},{"ruleId":"185","severity":1,"message":"186","line":86,"column":25,"nodeType":"187","endLine":86,"endColumn":55},{"ruleId":"197","severity":1,"message":"204","line":14,"column":7,"nodeType":"199","endLine":14,"endColumn":9,"suggestions":"229"},{"ruleId":"227","severity":1,"message":"228","line":17,"column":13,"nodeType":"187","endLine":17,"endColumn":85},{"ruleId":"185","severity":1,"message":"186","line":28,"column":17,"nodeType":"187","endLine":28,"endColumn":51},{"ruleId":"185","severity":1,"message":"186","line":29,"column":17,"nodeType":"187","endLine":29,"endColumn":51},{"ruleId":"230","severity":1,"message":"231","line":1,"column":1,"nodeType":"232","endLine":17,"endColumn":2},"no-unused-vars","'LocalizedStrings' is defined but never used.","Identifier","unusedVar","no-native-reassign",["233"],"no-negated-in-lhs",["234"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'width' is assigned a value but never used.","no-dupe-keys","Duplicate key 'univers'.","ObjectExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postBodyOrig'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPostBody' needs the current value of 'postBodyOrig'.","ArrayExpression",["235"],"'useState' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["236"],"React Hook useEffect has missing dependencies: 'chosenArea.branch.name' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["237"],"'setFocus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setElemsBranch' and 'setElemsProfs'. Either include them or remove the dependency array.",["238"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'fullProfsTemp'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProfs' needs the current value of 'fullProfsTemp'.",["239"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'firstSubj' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["240"],"'codeIn' is assigned a value but never used.","'connect' is defined but never used.",["241"],"React Hook useEffect has a missing dependency: 'firstSubj'. Either include it or remove the dependency array.",["242"],"'strings' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'blogCardClick'. Either include it or remove the dependency array.",["243"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["244"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [language, postBodyOrig]",{"range":"265","text":"266"},"Update the dependencies array to be: [props, props.isAlert]",{"range":"267","text":"268"},"Update the dependencies array to be: [props.fullSubj, props.branchOrProf, props, chosenArea.branch.name]",{"range":"269","text":"270"},"Update the dependencies array to be: [props.fullSubj, setElemsBranch, setElemsProfs]",{"range":"271","text":"272"},"Update the dependencies array to be: [fullProfsTemp, inputValue]",{"range":"273","text":"274"},"Update the dependencies array to be: [firstSubj, props, secondSubject]",{"range":"275","text":"276"},"Update the dependencies array to be: [hideFooter, props]",{"range":"277","text":"278"},"Update the dependencies array to be: [secondSubj, score, firstSubj]",{"range":"279","text":"280"},"Update the dependencies array to be: [blogCardClick, pages]",{"range":"281","text":"282"},"Update the dependencies array to be: [props]",{"range":"283","text":"284"},[4912,4922],"[language, postBodyOrig]",[733,748],"[props, props.isAlert]",[1257,1293],"[props.fullSubj, props.branchOrProf, props, chosenArea.branch.name]",[5492,5508],"[props.fullSubj, setElemsBranch, setElemsProfs]",[11205,11217],"[fullProfsTemp, inputValue]",[3043,3058],"[firstSubj, props, secondSubject]",[1519,1531],"[hideFooter, props]",[4912,4931],"[secondSubj, score, firstSubj]",[1361,1368],"[blogCardClick, pages]",[499,501],"[props]"]